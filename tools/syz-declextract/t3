ioctl$auto_0(fd fd, cmd const[0], arg ptr[in, 0])
ioctl$auto_'0'(fd fd, cmd const['0'], arg ptr[in, '0'])
ioctl$auto_0x05(fd fd, cmd const[0x05], arg ptr[in, 0x05])
ioctl$auto_0x09(fd fd, cmd const[0x09], arg ptr[in, 0x09])
ioctl$auto_0x3e(fd fd, cmd const[0x3e], arg ptr[in, 0x3e])
ioctl$auto_1(fd fd, cmd const[1], arg ptr[in, 1])
ioctl$auto_2(fd fd, cmd const[2], arg ptr[in, 2])
ioctl$auto_3(fd fd, cmd const[3], arg ptr[in, 3])
ioctl$auto_4(fd fd, cmd const[4], arg ptr[in, 4])
ioctl$auto_BINDER_CTL_ADD(fd fd, cmd const[BINDER_CTL_ADD], arg ptr[in, BINDER_CTL_ADD])
ioctl$auto_BINDER_ENABLE_ONEWAY_SPAM_DETECTION(fd fd, cmd const[BINDER_ENABLE_ONEWAY_SPAM_DETECTION], arg ptr[in, BINDER_ENABLE_ONEWAY_SPAM_DETECTION])
ioctl$auto_BINDER_FREEZE(fd fd, cmd const[BINDER_FREEZE], arg ptr[in, BINDER_FREEZE])
ioctl$auto_BINDER_GET_EXTENDED_ERROR(fd fd, cmd const[BINDER_GET_EXTENDED_ERROR], arg ptr[in, BINDER_GET_EXTENDED_ERROR])
ioctl$auto_BINDER_GET_FROZEN_INFO(fd fd, cmd const[BINDER_GET_FROZEN_INFO], arg ptr[in, BINDER_GET_FROZEN_INFO])
ioctl$auto_BINDER_GET_NODE_DEBUG_INFO(fd fd, cmd const[BINDER_GET_NODE_DEBUG_INFO], arg ptr[in, BINDER_GET_NODE_DEBUG_INFO])
ioctl$auto_BINDER_GET_NODE_INFO_FOR_REF(fd fd, cmd const[BINDER_GET_NODE_INFO_FOR_REF], arg ptr[in, BINDER_GET_NODE_INFO_FOR_REF])
ioctl$auto_BINDER_SET_CONTEXT_MGR_EXT(fd fd, cmd const[BINDER_SET_CONTEXT_MGR_EXT], arg ptr[in, BINDER_SET_CONTEXT_MGR_EXT])
ioctl$auto_BINDER_SET_CONTEXT_MGR(fd fd, cmd const[BINDER_SET_CONTEXT_MGR], arg ptr[in, BINDER_SET_CONTEXT_MGR])
ioctl$auto_BINDER_SET_MAX_THREADS(fd fd, cmd const[BINDER_SET_MAX_THREADS], arg ptr[in, BINDER_SET_MAX_THREADS])
ioctl$auto_BINDER_THREAD_EXIT(fd fd, cmd const[BINDER_THREAD_EXIT], arg ptr[in, BINDER_THREAD_EXIT])
ioctl$auto_BINDER_VERSION(fd fd, cmd const[BINDER_VERSION], arg ptr[in, BINDER_VERSION])
ioctl$auto_BINDER_WRITE_READ(fd fd, cmd const[BINDER_WRITE_READ], arg ptr[in, BINDER_WRITE_READ])
ioctl$auto_BLKPG(fd fd, cmd const[BLKPG], arg ptr[in, BLKPG])
ioctl$auto_BTRFS_IOC_DEVICES_READY(fd fd, cmd const[BTRFS_IOC_DEVICES_READY], arg ptr[in, BTRFS_IOC_DEVICES_READY])
ioctl$auto_BTRFS_IOC_FORGET_DEV(fd fd, cmd const[BTRFS_IOC_FORGET_DEV], arg ptr[in, BTRFS_IOC_FORGET_DEV])
ioctl$auto_BTRFS_IOC_GET_SUPPORTED_FEATURES(fd fd, cmd const[BTRFS_IOC_GET_SUPPORTED_FEATURES], arg ptr[in, BTRFS_IOC_GET_SUPPORTED_FEATURES])
ioctl$auto_BTRFS_IOC_SCAN_DEV(fd fd, cmd const[BTRFS_IOC_SCAN_DEV], arg ptr[in, BTRFS_IOC_SCAN_DEV])
ioctl$auto_CDROM_SEND_PACKET(fd fd, cmd const[CDROM_SEND_PACKET], arg ptr[in, CDROM_SEND_PACKET])
ioctl$auto_CEC_ADAP_G_CAPS(fd fd, cmd const[CEC_ADAP_G_CAPS], arg ptr[in, CEC_ADAP_G_CAPS])
ioctl$auto_CEC_ADAP_G_CONNECTOR_INFO(fd fd, cmd const[CEC_ADAP_G_CONNECTOR_INFO], arg ptr[in, CEC_ADAP_G_CONNECTOR_INFO])
ioctl$auto_CEC_ADAP_G_LOG_ADDRS(fd fd, cmd const[CEC_ADAP_G_LOG_ADDRS], arg ptr[in, CEC_ADAP_G_LOG_ADDRS])
ioctl$auto_CEC_ADAP_G_PHYS_ADDR(fd fd, cmd const[CEC_ADAP_G_PHYS_ADDR], arg ptr[in, CEC_ADAP_G_PHYS_ADDR])
ioctl$auto_CEC_ADAP_S_LOG_ADDRS(fd fd, cmd const[CEC_ADAP_S_LOG_ADDRS], arg ptr[in, CEC_ADAP_S_LOG_ADDRS])
ioctl$auto_CEC_ADAP_S_PHYS_ADDR(fd fd, cmd const[CEC_ADAP_S_PHYS_ADDR], arg ptr[in, CEC_ADAP_S_PHYS_ADDR])
ioctl$auto_CEC_DQEVENT(fd fd, cmd const[CEC_DQEVENT], arg ptr[in, CEC_DQEVENT])
ioctl$auto_CEC_G_MODE(fd fd, cmd const[CEC_G_MODE], arg ptr[in, CEC_G_MODE])
ioctl$auto_CEC_RECEIVE(fd fd, cmd const[CEC_RECEIVE], arg ptr[in, CEC_RECEIVE])
ioctl$auto_CEC_S_MODE(fd fd, cmd const[CEC_S_MODE], arg ptr[in, CEC_S_MODE])
ioctl$auto_CEC_TRANSMIT(fd fd, cmd const[CEC_TRANSMIT], arg ptr[in, CEC_TRANSMIT])
ioctl$auto_CHANNEL(fd fd, cmd const[CHANNEL], arg ptr[in, CHANNEL])
ioctl$auto_CMD_ANIMATE(fd fd, cmd const[CMD_ANIMATE], arg ptr[in, CMD_ANIMATE])
ioctl$auto_CMD_LED(fd fd, cmd const[CMD_LED], arg ptr[in, CMD_LED])
ioctl$auto_CMD_READ(fd fd, cmd const[CMD_READ], arg ptr[in, CMD_READ])
ioctl$auto_CMD_SET(fd fd, cmd const[CMD_SET], arg ptr[in, CMD_SET])
ioctl$auto_CMD_VERSION(fd fd, cmd const[CMD_VERSION], arg ptr[in, CMD_VERSION])
ioctl$auto_COMEDI32_CHANINFO(fd fd, cmd const[COMEDI32_CHANINFO], arg ptr[in, COMEDI32_CHANINFO])
ioctl$auto_COMEDI32_CMD(fd fd, cmd const[COMEDI32_CMD], arg ptr[in, COMEDI32_CMD])
ioctl$auto_COMEDI32_CMDTEST(fd fd, cmd const[COMEDI32_CMDTEST], arg ptr[in, COMEDI32_CMDTEST])
ioctl$auto_COMEDI32_INSN(fd fd, cmd const[COMEDI32_INSN], arg ptr[in, COMEDI32_INSN])
ioctl$auto_COMEDI32_INSNLIST(fd fd, cmd const[COMEDI32_INSNLIST], arg ptr[in, COMEDI32_INSNLIST])
ioctl$auto_COMEDI32_RANGEINFO(fd fd, cmd const[COMEDI32_RANGEINFO], arg ptr[in, COMEDI32_RANGEINFO])
ioctl$auto_COMEDI_BUFCONFIG(fd fd, cmd const[COMEDI_BUFCONFIG], arg ptr[in, COMEDI_BUFCONFIG])
ioctl$auto_COMEDI_BUFINFO(fd fd, cmd const[COMEDI_BUFINFO], arg ptr[in, COMEDI_BUFINFO])
ioctl$auto_COMEDI_CANCEL(fd fd, cmd const[COMEDI_CANCEL], arg ptr[in, COMEDI_CANCEL])
ioctl$auto_COMEDI_CHANINFO(fd fd, cmd const[COMEDI_CHANINFO], arg ptr[in, COMEDI_CHANINFO])
ioctl$auto_COMEDI_CMD(fd fd, cmd const[COMEDI_CMD], arg ptr[in, COMEDI_CMD])
ioctl$auto_COMEDI_CMDTEST(fd fd, cmd const[COMEDI_CMDTEST], arg ptr[in, COMEDI_CMDTEST])
ioctl$auto_COMEDI_DEVCONFIG(fd fd, cmd const[COMEDI_DEVCONFIG], arg ptr[in, COMEDI_DEVCONFIG])
ioctl$auto_COMEDI_DEVINFO(fd fd, cmd const[COMEDI_DEVINFO], arg ptr[in, COMEDI_DEVINFO])
ioctl$auto_COMEDI_INSN(fd fd, cmd const[COMEDI_INSN], arg ptr[in, COMEDI_INSN])
ioctl$auto_COMEDI_INSNLIST(fd fd, cmd const[COMEDI_INSNLIST], arg ptr[in, COMEDI_INSNLIST])
ioctl$auto_COMEDI_LOCK(fd fd, cmd const[COMEDI_LOCK], arg ptr[in, COMEDI_LOCK])
ioctl$auto_COMEDI_POLL(fd fd, cmd const[COMEDI_POLL], arg ptr[in, COMEDI_POLL])
ioctl$auto_COMEDI_RANGEINFO(fd fd, cmd const[COMEDI_RANGEINFO], arg ptr[in, COMEDI_RANGEINFO])
ioctl$auto_COMEDI_SETRSUBD(fd fd, cmd const[COMEDI_SETRSUBD], arg ptr[in, COMEDI_SETRSUBD])
ioctl$auto_COMEDI_SETWSUBD(fd fd, cmd const[COMEDI_SETWSUBD], arg ptr[in, COMEDI_SETWSUBD])
ioctl$auto_COMEDI_SUBDINFO(fd fd, cmd const[COMEDI_SUBDINFO], arg ptr[in, COMEDI_SUBDINFO])
ioctl$auto_COMEDI_UNLOCK(fd fd, cmd const[COMEDI_UNLOCK], arg ptr[in, COMEDI_UNLOCK])
ioctl$auto_COUNTER_ADD_WATCH_IOCTL(fd fd, cmd const[COUNTER_ADD_WATCH_IOCTL], arg ptr[in, COUNTER_ADD_WATCH_IOCTL])
ioctl$auto_COUNTER_DISABLE_EVENTS_IOCTL(fd fd, cmd const[COUNTER_DISABLE_EVENTS_IOCTL], arg ptr[in, COUNTER_DISABLE_EVENTS_IOCTL])
ioctl$auto_COUNTER_ENABLE_EVENTS_IOCTL(fd fd, cmd const[COUNTER_ENABLE_EVENTS_IOCTL], arg ptr[in, COUNTER_ENABLE_EVENTS_IOCTL])
ioctl$auto_DID_ABORT(fd fd, cmd const[DID_ABORT], arg ptr[in, DID_ABORT])
ioctl$auto_DID_BAD_INTR(fd fd, cmd const[DID_BAD_INTR], arg ptr[in, DID_BAD_INTR])
ioctl$auto_DID_BAD_TARGET(fd fd, cmd const[DID_BAD_TARGET], arg ptr[in, DID_BAD_TARGET])
ioctl$auto_DID_BUS_BUSY(fd fd, cmd const[DID_BUS_BUSY], arg ptr[in, DID_BUS_BUSY])
ioctl$auto_DID_ERROR(fd fd, cmd const[DID_ERROR], arg ptr[in, DID_ERROR])
ioctl$auto_DID_NO_CONNECT(fd fd, cmd const[DID_NO_CONNECT], arg ptr[in, DID_NO_CONNECT])
ioctl$auto_DID_OK(fd fd, cmd const[DID_OK], arg ptr[in, DID_OK])
ioctl$auto_DID_PARITY(fd fd, cmd const[DID_PARITY], arg ptr[in, DID_PARITY])
ioctl$auto_DID_PASSTHROUGH(fd fd, cmd const[DID_PASSTHROUGH], arg ptr[in, DID_PASSTHROUGH])
ioctl$auto_DID_RESET(fd fd, cmd const[DID_RESET], arg ptr[in, DID_RESET])
ioctl$auto_DID_SOFT_ERROR(fd fd, cmd const[DID_SOFT_ERROR], arg ptr[in, DID_SOFT_ERROR])
ioctl$auto_DID_TIME_OUT(fd fd, cmd const[DID_TIME_OUT], arg ptr[in, DID_TIME_OUT])
ioctl$auto_DLM_USER_CREATE_LOCKSPACE(fd fd, cmd const[DLM_USER_CREATE_LOCKSPACE], arg ptr[in, DLM_USER_CREATE_LOCKSPACE])
ioctl$auto_DLM_USER_DEADLOCK(fd fd, cmd const[DLM_USER_DEADLOCK], arg ptr[in, DLM_USER_DEADLOCK])
ioctl$auto_DLM_USER_LOCK(fd fd, cmd const[DLM_USER_LOCK], arg ptr[in, DLM_USER_LOCK])
ioctl$auto_DLM_USER_PURGE(fd fd, cmd const[DLM_USER_PURGE], arg ptr[in, DLM_USER_PURGE])
ioctl$auto_DLM_USER_REMOVE_LOCKSPACE(fd fd, cmd const[DLM_USER_REMOVE_LOCKSPACE], arg ptr[in, DLM_USER_REMOVE_LOCKSPACE])
ioctl$auto_DLM_USER_UNLOCK(fd fd, cmd const[DLM_USER_UNLOCK], arg ptr[in, DLM_USER_UNLOCK])
ioctl$auto_DMA_BUF_IOCTL_EXPORT_SYNC_FILE(fd fd, cmd const[DMA_BUF_IOCTL_EXPORT_SYNC_FILE], arg ptr[in, DMA_BUF_IOCTL_EXPORT_SYNC_FILE])
ioctl$auto_DMA_BUF_IOCTL_IMPORT_SYNC_FILE(fd fd, cmd const[DMA_BUF_IOCTL_IMPORT_SYNC_FILE], arg ptr[in, DMA_BUF_IOCTL_IMPORT_SYNC_FILE])
ioctl$auto_DMA_BUF_IOCTL_SYNC(fd fd, cmd const[DMA_BUF_IOCTL_SYNC], arg ptr[in, DMA_BUF_IOCTL_SYNC])
ioctl$auto_DMA_BUF_SET_NAME_A(fd fd, cmd const[DMA_BUF_SET_NAME_A], arg ptr[in, DMA_BUF_SET_NAME_A])
ioctl$auto_DMA_BUF_SET_NAME_B(fd fd, cmd const[DMA_BUF_SET_NAME_B], arg ptr[in, DMA_BUF_SET_NAME_B])
ioctl$auto_DMA_BUF_SYNC_READ(fd fd, cmd const[DMA_BUF_SYNC_READ], arg ptr[in, DMA_BUF_SYNC_READ])
ioctl$auto_DMA_BUF_SYNC_RW(fd fd, cmd const[DMA_BUF_SYNC_RW], arg ptr[in, DMA_BUF_SYNC_RW])
ioctl$auto_DMA_BUF_SYNC_WRITE(fd fd, cmd const[DMA_BUF_SYNC_WRITE], arg ptr[in, DMA_BUF_SYNC_WRITE])
ioctl$auto_DMA_HEAP_IOCTL_ALLOC(fd fd, cmd const[DMA_HEAP_IOCTL_ALLOC], arg ptr[in, DMA_HEAP_IOCTL_ALLOC])
ioctl$auto_EA_IOCTL(SECCOMP_IOCTL_NOTIF_ADDFD)(fd fd, cmd const[EA_IOCTL(SECCOMP_IOCTL_NOTIF_ADDFD)], arg ptr[in, EA_IOCTL(SECCOMP_IOCTL_NOTIF_ADDFD)])
ioctl$auto_ECRYPTFS_MSG_HELO(fd fd, cmd const[ECRYPTFS_MSG_HELO], arg ptr[in, ECRYPTFS_MSG_HELO])
ioctl$auto_ECRYPTFS_MSG_QUIT(fd fd, cmd const[ECRYPTFS_MSG_QUIT], arg ptr[in, ECRYPTFS_MSG_QUIT])
ioctl$auto_ECRYPTFS_MSG_RESPONSE(fd fd, cmd const[ECRYPTFS_MSG_RESPONSE], arg ptr[in, ECRYPTFS_MSG_RESPONSE])
ioctl$auto_-EISDIR(fd fd, cmd const[-EISDIR], arg ptr[in, -EISDIR])
ioctl$auto_-ELOOP(fd fd, cmd const[-ELOOP], arg ptr[in, -ELOOP])
ioctl$auto_-ENOENT(fd fd, cmd const[-ENOENT], arg ptr[in, -ENOENT])
ioctl$auto_-ENOTDIR(fd fd, cmd const[-ENOTDIR], arg ptr[in, -ENOTDIR])
ioctl$auto_EPIOCGPARAMS(fd fd, cmd const[EPIOCGPARAMS], arg ptr[in, EPIOCGPARAMS])
ioctl$auto_EPIOCSPARAMS(fd fd, cmd const[EPIOCSPARAMS], arg ptr[in, EPIOCSPARAMS])
ioctl$auto_-ESTALE(fd fd, cmd const[-ESTALE], arg ptr[in, -ESTALE])
ioctl$auto_F2FS_IOC32_GARBAGE_COLLECT_RANGE(fd fd, cmd const[F2FS_IOC32_GARBAGE_COLLECT_RANGE], arg ptr[in, F2FS_IOC32_GARBAGE_COLLECT_RANGE])
ioctl$auto_F2FS_IOC32_MOVE_RANGE(fd fd, cmd const[F2FS_IOC32_MOVE_RANGE], arg ptr[in, F2FS_IOC32_MOVE_RANGE])
ioctl$auto_F2FS_IOC_ABORT_ATOMIC_WRITE(fd fd, cmd const[F2FS_IOC_ABORT_ATOMIC_WRITE], arg ptr[in, F2FS_IOC_ABORT_ATOMIC_WRITE])
ioctl$auto_F2FS_IOC_COMMIT_ATOMIC_WRITE(fd fd, cmd const[F2FS_IOC_COMMIT_ATOMIC_WRITE], arg ptr[in, F2FS_IOC_COMMIT_ATOMIC_WRITE])
ioctl$auto_F2FS_IOC_COMPRESS_FILE(fd fd, cmd const[F2FS_IOC_COMPRESS_FILE], arg ptr[in, F2FS_IOC_COMPRESS_FILE])
ioctl$auto_F2FS_IOC_DECOMPRESS_FILE(fd fd, cmd const[F2FS_IOC_DECOMPRESS_FILE], arg ptr[in, F2FS_IOC_DECOMPRESS_FILE])
ioctl$auto_F2FS_IOC_DEFRAGMENT(fd fd, cmd const[F2FS_IOC_DEFRAGMENT], arg ptr[in, F2FS_IOC_DEFRAGMENT])
ioctl$auto_F2FS_IOC_FLUSH_DEVICE(fd fd, cmd const[F2FS_IOC_FLUSH_DEVICE], arg ptr[in, F2FS_IOC_FLUSH_DEVICE])
ioctl$auto_F2FS_IOC_GARBAGE_COLLECT(fd fd, cmd const[F2FS_IOC_GARBAGE_COLLECT], arg ptr[in, F2FS_IOC_GARBAGE_COLLECT])
ioctl$auto_F2FS_IOC_GET_COMPRESS_BLOCKS(fd fd, cmd const[F2FS_IOC_GET_COMPRESS_BLOCKS], arg ptr[in, F2FS_IOC_GET_COMPRESS_BLOCKS])
ioctl$auto_F2FS_IOC_GET_COMPRESS_OPTION(fd fd, cmd const[F2FS_IOC_GET_COMPRESS_OPTION], arg ptr[in, F2FS_IOC_GET_COMPRESS_OPTION])
ioctl$auto_F2FS_IOC_GET_FEATURES(fd fd, cmd const[F2FS_IOC_GET_FEATURES], arg ptr[in, F2FS_IOC_GET_FEATURES])
ioctl$auto_F2FS_IOC_GET_PIN_FILE(fd fd, cmd const[F2FS_IOC_GET_PIN_FILE], arg ptr[in, F2FS_IOC_GET_PIN_FILE])
ioctl$auto_F2FS_IOC_PRECACHE_EXTENTS(fd fd, cmd const[F2FS_IOC_PRECACHE_EXTENTS], arg ptr[in, F2FS_IOC_PRECACHE_EXTENTS])
ioctl$auto_F2FS_IOC_RELEASE_COMPRESS_BLOCKS(fd fd, cmd const[F2FS_IOC_RELEASE_COMPRESS_BLOCKS], arg ptr[in, F2FS_IOC_RELEASE_COMPRESS_BLOCKS])
ioctl$auto_F2FS_IOC_RELEASE_VOLATILE_WRITE(fd fd, cmd const[F2FS_IOC_RELEASE_VOLATILE_WRITE], arg ptr[in, F2FS_IOC_RELEASE_VOLATILE_WRITE])
ioctl$auto_F2FS_IOC_RESERVE_COMPRESS_BLOCKS(fd fd, cmd const[F2FS_IOC_RESERVE_COMPRESS_BLOCKS], arg ptr[in, F2FS_IOC_RESERVE_COMPRESS_BLOCKS])
ioctl$auto_F2FS_IOC_RESIZE_FS(fd fd, cmd const[F2FS_IOC_RESIZE_FS], arg ptr[in, F2FS_IOC_RESIZE_FS])
ioctl$auto_F2FS_IOC_SEC_TRIM_FILE(fd fd, cmd const[F2FS_IOC_SEC_TRIM_FILE], arg ptr[in, F2FS_IOC_SEC_TRIM_FILE])
ioctl$auto_F2FS_IOC_SET_COMPRESS_OPTION(fd fd, cmd const[F2FS_IOC_SET_COMPRESS_OPTION], arg ptr[in, F2FS_IOC_SET_COMPRESS_OPTION])
ioctl$auto_F2FS_IOC_SET_PIN_FILE(fd fd, cmd const[F2FS_IOC_SET_PIN_FILE], arg ptr[in, F2FS_IOC_SET_PIN_FILE])
ioctl$auto_F2FS_IOC_SHUTDOWN(fd fd, cmd const[F2FS_IOC_SHUTDOWN], arg ptr[in, F2FS_IOC_SHUTDOWN])
ioctl$auto_F2FS_IOC_START_ATOMIC_REPLACE(fd fd, cmd const[F2FS_IOC_START_ATOMIC_REPLACE], arg ptr[in, F2FS_IOC_START_ATOMIC_REPLACE])
ioctl$auto_F2FS_IOC_START_ATOMIC_WRITE(fd fd, cmd const[F2FS_IOC_START_ATOMIC_WRITE], arg ptr[in, F2FS_IOC_START_ATOMIC_WRITE])
ioctl$auto_F2FS_IOC_START_VOLATILE_WRITE(fd fd, cmd const[F2FS_IOC_START_VOLATILE_WRITE], arg ptr[in, F2FS_IOC_START_VOLATILE_WRITE])
ioctl$auto_F2FS_IOC_WRITE_CHECKPOINT(fd fd, cmd const[F2FS_IOC_WRITE_CHECKPOINT], arg ptr[in, F2FS_IOC_WRITE_CHECKPOINT])
ioctl$auto_FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE | FALLOC_FL_NO_HIDE_STALE(fd fd, cmd const[FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE | FALLOC_FL_NO_HIDE_STALE], arg ptr[in, FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE | FALLOC_FL_NO_HIDE_STALE])
ioctl$auto_FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE(fd fd, cmd const[FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE], arg ptr[in, FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE])
ioctl$auto_FALLOC_FL_ZERO_RANGE | FALLOC_FL_KEEP_SIZE(fd fd, cmd const[FALLOC_FL_ZERO_RANGE | FALLOC_FL_KEEP_SIZE], arg ptr[in, FALLOC_FL_ZERO_RANGE | FALLOC_FL_KEEP_SIZE])
ioctl$auto_FALLOC_FL_ZERO_RANGE(fd fd, cmd const[FALLOC_FL_ZERO_RANGE], arg ptr[in, FALLOC_FL_ZERO_RANGE])
ioctl$auto_FAT_IOCTL_GET_ATTRIBUTES(fd fd, cmd const[FAT_IOCTL_GET_ATTRIBUTES], arg ptr[in, FAT_IOCTL_GET_ATTRIBUTES])
ioctl$auto_FAT_IOCTL_GET_VOLUME_ID(fd fd, cmd const[FAT_IOCTL_GET_VOLUME_ID], arg ptr[in, FAT_IOCTL_GET_VOLUME_ID])
ioctl$auto_FAT_IOCTL_SET_ATTRIBUTES(fd fd, cmd const[FAT_IOCTL_SET_ATTRIBUTES], arg ptr[in, FAT_IOCTL_SET_ATTRIBUTES])
ioctl$auto_FBIOBLANK(fd fd, cmd const[FBIOBLANK], arg ptr[in, FBIOBLANK])
ioctl$auto_FBIOGETCMAP(fd fd, cmd const[FBIOGETCMAP], arg ptr[in, FBIOGETCMAP])
ioctl$auto_FBIOGET_CON2FBMAP(fd fd, cmd const[FBIOGET_CON2FBMAP], arg ptr[in, FBIOGET_CON2FBMAP])
ioctl$auto_FBIOGET_FSCREENINFO(fd fd, cmd const[FBIOGET_FSCREENINFO], arg ptr[in, FBIOGET_FSCREENINFO])
ioctl$auto_FBIOGET_VSCREENINFO(fd fd, cmd const[FBIOGET_VSCREENINFO], arg ptr[in, FBIOGET_VSCREENINFO])
ioctl$auto_FBIOPAN_DISPLAY(fd fd, cmd const[FBIOPAN_DISPLAY], arg ptr[in, FBIOPAN_DISPLAY])
ioctl$auto_FBIOPUTCMAP(fd fd, cmd const[FBIOPUTCMAP], arg ptr[in, FBIOPUTCMAP])
ioctl$auto_FBIOPUT_CON2FBMAP(fd fd, cmd const[FBIOPUT_CON2FBMAP], arg ptr[in, FBIOPUT_CON2FBMAP])
ioctl$auto_FBIOPUT_VSCREENINFO(fd fd, cmd const[FBIOPUT_VSCREENINFO], arg ptr[in, FBIOPUT_VSCREENINFO])
ioctl$auto_(fd fd, cmd const[], arg ptr[in, ])
ioctl$auto(fd fd, cmd int32, arg intptr) (automatic)
ioctl$auto_FFS_ACTIVE(fd fd, cmd const[FFS_ACTIVE], arg ptr[in, FFS_ACTIVE])
ioctl$auto_FFS_CLOSING(fd fd, cmd const[FFS_CLOSING], arg ptr[in, FFS_CLOSING])
ioctl$auto_FFS_DEACTIVATED(fd fd, cmd const[FFS_DEACTIVATED], arg ptr[in, FFS_DEACTIVATED])
ioctl$auto_FFS_NO_SETUP(fd fd, cmd const[FFS_NO_SETUP], arg ptr[in, FFS_NO_SETUP])
ioctl$auto_FFS_READ_DESCRIPTORS(fd fd, cmd const[FFS_READ_DESCRIPTORS], arg ptr[in, FFS_READ_DESCRIPTORS])
ioctl$auto_FFS_READ_STRINGS(fd fd, cmd const[FFS_READ_STRINGS], arg ptr[in, FFS_READ_STRINGS])
ioctl$auto_FFS_SETUP_CANCELLED(fd fd, cmd const[FFS_SETUP_CANCELLED], arg ptr[in, FFS_SETUP_CANCELLED])
ioctl$auto_FFS_SETUP_PENDING(fd fd, cmd const[FFS_SETUP_PENDING], arg ptr[in, FFS_SETUP_PENDING])
ioctl$auto_FIONREAD(fd fd, cmd const[FIONREAD], arg ptr[in, FIONREAD])
ioctl$auto_FITRIM(fd fd, cmd const[FITRIM], arg ptr[in, FITRIM])
ioctl$auto_FMODE_READ(fd fd, cmd const[FMODE_READ], arg ptr[in, FMODE_READ])
ioctl$auto_FMODE_READ | FMODE_WRITE(fd fd, cmd const[FMODE_READ | FMODE_WRITE], arg ptr[in, FMODE_READ | FMODE_WRITE])
ioctl$auto_FMODE_WRITE(fd fd, cmd const[FMODE_WRITE], arg ptr[in, FMODE_WRITE])
ioctl$auto_FS_IOC32_GETFLAGS(fd fd, cmd const[FS_IOC32_GETFLAGS], arg ptr[in, FS_IOC32_GETFLAGS])
ioctl$auto_FS_IOC32_GETVERSION(fd fd, cmd const[FS_IOC32_GETVERSION], arg ptr[in, FS_IOC32_GETVERSION])
ioctl$auto_FS_IOC32_SETFLAGS(fd fd, cmd const[FS_IOC32_SETFLAGS], arg ptr[in, FS_IOC32_SETFLAGS])
ioctl$auto_FS_IOC32_SETVERSION(fd fd, cmd const[FS_IOC32_SETVERSION], arg ptr[in, FS_IOC32_SETVERSION])
ioctl$auto_FS_IOC_ADD_ENCRYPTION_KEY(fd fd, cmd const[FS_IOC_ADD_ENCRYPTION_KEY], arg ptr[in, FS_IOC_ADD_ENCRYPTION_KEY])
ioctl$auto_FS_IOC_ENABLE_VERITY(fd fd, cmd const[FS_IOC_ENABLE_VERITY], arg ptr[in, FS_IOC_ENABLE_VERITY])
ioctl$auto_FS_IOC_GET_ENCRYPTION_KEY_STATUS(fd fd, cmd const[FS_IOC_GET_ENCRYPTION_KEY_STATUS], arg ptr[in, FS_IOC_GET_ENCRYPTION_KEY_STATUS])
ioctl$auto_FS_IOC_GET_ENCRYPTION_NONCE(fd fd, cmd const[FS_IOC_GET_ENCRYPTION_NONCE], arg ptr[in, FS_IOC_GET_ENCRYPTION_NONCE])
ioctl$auto_FS_IOC_GET_ENCRYPTION_POLICY_EX(fd fd, cmd const[FS_IOC_GET_ENCRYPTION_POLICY_EX], arg ptr[in, FS_IOC_GET_ENCRYPTION_POLICY_EX])
ioctl$auto_FS_IOC_GET_ENCRYPTION_POLICY(fd fd, cmd const[FS_IOC_GET_ENCRYPTION_POLICY], arg ptr[in, FS_IOC_GET_ENCRYPTION_POLICY])
ioctl$auto_FS_IOC_GET_ENCRYPTION_PWSALT(fd fd, cmd const[FS_IOC_GET_ENCRYPTION_PWSALT], arg ptr[in, FS_IOC_GET_ENCRYPTION_PWSALT])
ioctl$auto_FS_IOC_GETFLAGS(fd fd, cmd const[FS_IOC_GETFLAGS], arg ptr[in, FS_IOC_GETFLAGS])
ioctl$auto_FS_IOC_GETFSLABEL(fd fd, cmd const[FS_IOC_GETFSLABEL], arg ptr[in, FS_IOC_GETFSLABEL])
ioctl$auto_FS_IOC_GETVERSION(fd fd, cmd const[FS_IOC_GETVERSION], arg ptr[in, FS_IOC_GETVERSION])
ioctl$auto_FS_IOC_MEASURE_VERITY(fd fd, cmd const[FS_IOC_MEASURE_VERITY], arg ptr[in, FS_IOC_MEASURE_VERITY])
ioctl$auto_FS_IOC_READ_VERITY_METADATA(fd fd, cmd const[FS_IOC_READ_VERITY_METADATA], arg ptr[in, FS_IOC_READ_VERITY_METADATA])
ioctl$auto_FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS(fd fd, cmd const[FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS], arg ptr[in, FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS])
ioctl$auto_FS_IOC_REMOVE_ENCRYPTION_KEY(fd fd, cmd const[FS_IOC_REMOVE_ENCRYPTION_KEY], arg ptr[in, FS_IOC_REMOVE_ENCRYPTION_KEY])
ioctl$auto_FS_IOC_SET_ENCRYPTION_POLICY(fd fd, cmd const[FS_IOC_SET_ENCRYPTION_POLICY], arg ptr[in, FS_IOC_SET_ENCRYPTION_POLICY])
ioctl$auto_FS_IOC_SETFLAGS(fd fd, cmd const[FS_IOC_SETFLAGS], arg ptr[in, FS_IOC_SETFLAGS])
ioctl$auto_FS_IOC_SETFSLABEL(fd fd, cmd const[FS_IOC_SETFSLABEL], arg ptr[in, FS_IOC_SETFSLABEL])
ioctl$auto_FS_IOC_SETVERSION(fd fd, cmd const[FS_IOC_SETVERSION], arg ptr[in, FS_IOC_SETVERSION])
ioctl$auto_FUNCTIONFS_CLEAR_HALT(fd fd, cmd const[FUNCTIONFS_CLEAR_HALT], arg ptr[in, FUNCTIONFS_CLEAR_HALT])
ioctl$auto_FUNCTIONFS_DMABUF_ATTACH(fd fd, cmd const[FUNCTIONFS_DMABUF_ATTACH], arg ptr[in, FUNCTIONFS_DMABUF_ATTACH])
ioctl$auto_FUNCTIONFS_DMABUF_DETACH(fd fd, cmd const[FUNCTIONFS_DMABUF_DETACH], arg ptr[in, FUNCTIONFS_DMABUF_DETACH])
ioctl$auto_FUNCTIONFS_DMABUF_TRANSFER(fd fd, cmd const[FUNCTIONFS_DMABUF_TRANSFER], arg ptr[in, FUNCTIONFS_DMABUF_TRANSFER])
ioctl$auto_FUNCTIONFS_ENDPOINT_DESC(fd fd, cmd const[FUNCTIONFS_ENDPOINT_DESC], arg ptr[in, FUNCTIONFS_ENDPOINT_DESC])
ioctl$auto_FUNCTIONFS_ENDPOINT_REVMAP(fd fd, cmd const[FUNCTIONFS_ENDPOINT_REVMAP], arg ptr[in, FUNCTIONFS_ENDPOINT_REVMAP])
ioctl$auto_FUNCTIONFS_FIFO_FLUSH(fd fd, cmd const[FUNCTIONFS_FIFO_FLUSH], arg ptr[in, FUNCTIONFS_FIFO_FLUSH])
ioctl$auto_FUNCTIONFS_FIFO_STATUS(fd fd, cmd const[FUNCTIONFS_FIFO_STATUS], arg ptr[in, FUNCTIONFS_FIFO_STATUS])
ioctl$auto_FUSE_DEV_IOC_BACKING_CLOSE(fd fd, cmd const[FUSE_DEV_IOC_BACKING_CLOSE], arg ptr[in, FUSE_DEV_IOC_BACKING_CLOSE])
ioctl$auto_FUSE_DEV_IOC_BACKING_OPEN(fd fd, cmd const[FUSE_DEV_IOC_BACKING_OPEN], arg ptr[in, FUSE_DEV_IOC_BACKING_OPEN])
ioctl$auto_FUSE_DEV_IOC_CLONE(fd fd, cmd const[FUSE_DEV_IOC_CLONE], arg ptr[in, FUSE_DEV_IOC_CLONE])
ioctl$auto_GADGETFS_CLEAR_HALT(fd fd, cmd const[GADGETFS_CLEAR_HALT], arg ptr[in, GADGETFS_CLEAR_HALT])
ioctl$auto_GADGETFS_FIFO_FLUSH(fd fd, cmd const[GADGETFS_FIFO_FLUSH], arg ptr[in, GADGETFS_FIFO_FLUSH])
ioctl$auto_GADGETFS_FIFO_STATUS(fd fd, cmd const[GADGETFS_FIFO_STATUS], arg ptr[in, GADGETFS_FIFO_STATUS])
ioctl$auto_GADGET_GET_PRINTER_STATUS(fd fd, cmd const[GADGET_GET_PRINTER_STATUS], arg ptr[in, GADGET_GET_PRINTER_STATUS])
ioctl$auto_GADGET_SET_PRINTER_STATUS(fd fd, cmd const[GADGET_SET_PRINTER_STATUS], arg ptr[in, GADGET_SET_PRINTER_STATUS])
ioctl$auto_HCI_DEVCOREDUMP_ABORT(fd fd, cmd const[HCI_DEVCOREDUMP_ABORT], arg ptr[in, HCI_DEVCOREDUMP_ABORT])
ioctl$auto_HCI_DEVCOREDUMP_DONE(fd fd, cmd const[HCI_DEVCOREDUMP_DONE], arg ptr[in, HCI_DEVCOREDUMP_DONE])
ioctl$auto_HCI_DEVCOREDUMP_TIMEOUT(fd fd, cmd const[HCI_DEVCOREDUMP_TIMEOUT], arg ptr[in, HCI_DEVCOREDUMP_TIMEOUT])
ioctl$auto_HIDIOCAPPLICATION(fd fd, cmd const[HIDIOCAPPLICATION], arg ptr[in, HIDIOCAPPLICATION])
ioctl$auto_HIDIOCGCOLLECTIONINDEX(fd fd, cmd const[HIDIOCGCOLLECTIONINDEX], arg ptr[in, HIDIOCGCOLLECTIONINDEX])
ioctl$auto_HIDIOCGCOLLECTIONINFO(fd fd, cmd const[HIDIOCGCOLLECTIONINFO], arg ptr[in, HIDIOCGCOLLECTIONINFO])
ioctl$auto_HIDIOCGDEVINFO(fd fd, cmd const[HIDIOCGDEVINFO], arg ptr[in, HIDIOCGDEVINFO])
ioctl$auto_HIDIOCGFIELDINFO(fd fd, cmd const[HIDIOCGFIELDINFO], arg ptr[in, HIDIOCGFIELDINFO])
ioctl$auto_HIDIOCGFLAG(fd fd, cmd const[HIDIOCGFLAG], arg ptr[in, HIDIOCGFLAG])
ioctl$auto_HIDIOCGRAWINFO(fd fd, cmd const[HIDIOCGRAWINFO], arg ptr[in, HIDIOCGRAWINFO])
ioctl$auto_HIDIOCGRDESC(fd fd, cmd const[HIDIOCGRDESC], arg ptr[in, HIDIOCGRDESC])
ioctl$auto_HIDIOCGRDESCSIZE(fd fd, cmd const[HIDIOCGRDESCSIZE], arg ptr[in, HIDIOCGRDESCSIZE])
ioctl$auto_HIDIOCGREPORT(fd fd, cmd const[HIDIOCGREPORT], arg ptr[in, HIDIOCGREPORT])
ioctl$auto_HIDIOCGREPORTINFO(fd fd, cmd const[HIDIOCGREPORTINFO], arg ptr[in, HIDIOCGREPORTINFO])
ioctl$auto_HIDIOCGSTRING(fd fd, cmd const[HIDIOCGSTRING], arg ptr[in, HIDIOCGSTRING])
ioctl$auto_HIDIOCGUCODE(fd fd, cmd const[HIDIOCGUCODE], arg ptr[in, HIDIOCGUCODE])
ioctl$auto_HIDIOCGUSAGE(fd fd, cmd const[HIDIOCGUSAGE], arg ptr[in, HIDIOCGUSAGE])
ioctl$auto_HIDIOCGUSAGES(fd fd, cmd const[HIDIOCGUSAGES], arg ptr[in, HIDIOCGUSAGES])
ioctl$auto_HIDIOCGVERSION(fd fd, cmd const[HIDIOCGVERSION], arg ptr[in, HIDIOCGVERSION])
ioctl$auto_HIDIOCINITREPORT(fd fd, cmd const[HIDIOCINITREPORT], arg ptr[in, HIDIOCINITREPORT])
ioctl$auto_HIDIOCSFLAG(fd fd, cmd const[HIDIOCSFLAG], arg ptr[in, HIDIOCSFLAG])
ioctl$auto_HIDIOCSREPORT(fd fd, cmd const[HIDIOCSREPORT], arg ptr[in, HIDIOCSREPORT])
ioctl$auto_HIDIOCSUSAGE(fd fd, cmd const[HIDIOCSUSAGE], arg ptr[in, HIDIOCSUSAGE])
ioctl$auto_HIDIOCSUSAGES(fd fd, cmd const[HIDIOCSUSAGES], arg ptr[in, HIDIOCSUSAGES])
ioctl$auto_I2C_FUNCS(fd fd, cmd const[I2C_FUNCS], arg ptr[in, I2C_FUNCS])
ioctl$auto_I2C_PEC(fd fd, cmd const[I2C_PEC], arg ptr[in, I2C_PEC])
ioctl$auto_I2C_RDWR(fd fd, cmd const[I2C_RDWR], arg ptr[in, I2C_RDWR])
ioctl$auto_I2C_RETRIES(fd fd, cmd const[I2C_RETRIES], arg ptr[in, I2C_RETRIES])
ioctl$auto_I2C_SLAVE(fd fd, cmd const[I2C_SLAVE], arg ptr[in, I2C_SLAVE])
ioctl$auto_I2C_SLAVE_FORCE(fd fd, cmd const[I2C_SLAVE_FORCE], arg ptr[in, I2C_SLAVE_FORCE])
ioctl$auto_I2C_SMBUS(fd fd, cmd const[I2C_SMBUS], arg ptr[in, I2C_SMBUS])
ioctl$auto_I2C_TENBIT(fd fd, cmd const[I2C_TENBIT], arg ptr[in, I2C_TENBIT])
ioctl$auto_I2C_TIMEOUT(fd fd, cmd const[I2C_TIMEOUT], arg ptr[in, I2C_TIMEOUT])
ioctl$auto_IB_USER_MAD_ENABLE_PKEY(fd fd, cmd const[IB_USER_MAD_ENABLE_PKEY], arg ptr[in, IB_USER_MAD_ENABLE_PKEY])
ioctl$auto_IB_USER_MAD_REGISTER_AGENT2(fd fd, cmd const[IB_USER_MAD_REGISTER_AGENT2], arg ptr[in, IB_USER_MAD_REGISTER_AGENT2])
ioctl$auto_IB_USER_MAD_REGISTER_AGENT(fd fd, cmd const[IB_USER_MAD_REGISTER_AGENT], arg ptr[in, IB_USER_MAD_REGISTER_AGENT])
ioctl$auto_IB_USER_MAD_UNREGISTER_AGENT(fd fd, cmd const[IB_USER_MAD_UNREGISTER_AGENT], arg ptr[in, IB_USER_MAD_UNREGISTER_AGENT])
ioctl$auto_IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_11454(fd fd, cmd const[IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_11454], arg ptr[in, IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_11454])
ioctl$auto_IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_3895(fd fd, cmd const[IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_3895], arg ptr[in, IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_3895])
ioctl$auto_IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_7991(fd fd, cmd const[IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_7991], arg ptr[in, IEEE80211_EHT_MAC_CAP0_MAX_MPDU_LEN_7991])
ioctl$auto_IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_0US(fd fd, cmd const[IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_0US], arg ptr[in, IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_0US])
ioctl$auto_IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_16US(fd fd, cmd const[IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_16US], arg ptr[in, IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_16US])
ioctl$auto_IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_20US(fd fd, cmd const[IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_20US], arg ptr[in, IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_20US])
ioctl$auto_IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_8US(fd fd, cmd const[IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_8US], arg ptr[in, IEEE80211_EHT_PHY_CAP5_COMMON_NOMINAL_PKT_PAD_8US])
ioctl$auto_IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_0(fd fd, cmd const[IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_0], arg ptr[in, IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_0])
ioctl$auto_IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_1(fd fd, cmd const[IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_1], arg ptr[in, IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_1])
ioctl$auto_IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_2(fd fd, cmd const[IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_2], arg ptr[in, IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_2])
ioctl$auto_IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_3(fd fd, cmd const[IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_3], arg ptr[in, IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_EXT_3])
ioctl$auto_IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_160MHZ_ONLY_SECOND_20MHZ(fd fd, cmd const[IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_160MHZ_ONLY_SECOND_20MHZ], arg ptr[in, IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_160MHZ_ONLY_SECOND_20MHZ])
ioctl$auto_IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_160MHZ_ONLY_SECOND_40MHZ(fd fd, cmd const[IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_160MHZ_ONLY_SECOND_40MHZ], arg ptr[in, IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_160MHZ_ONLY_SECOND_40MHZ])
ioctl$auto_IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_80MHZ_ONLY_SECOND_20MHZ(fd fd, cmd const[IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_80MHZ_ONLY_SECOND_20MHZ], arg ptr[in, IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_80MHZ_ONLY_SECOND_20MHZ])
ioctl$auto_IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_80MHZ_ONLY_SECOND_40MHZ(fd fd, cmd const[IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_80MHZ_ONLY_SECOND_40MHZ], arg ptr[in, IEEE80211_HE_PHY_CAP1_PREAMBLE_PUNC_RX_80MHZ_ONLY_SECOND_40MHZ])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_16_QAM(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_16_QAM], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_16_QAM])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_BPSK(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_BPSK], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_BPSK])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_NO_DCM(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_NO_DCM], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_NO_DCM])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_QPSK(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_QPSK], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_RX_QPSK])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_16_QAM(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_16_QAM], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_16_QAM])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_BPSK(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_BPSK], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_BPSK])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_NO_DCM(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_NO_DCM], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_NO_DCM])
ioctl$auto_IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_QPSK(fd fd, cmd const[IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_QPSK], arg ptr[in, IEEE80211_HE_PHY_CAP3_DCM_MAX_CONST_TX_QPSK])
ioctl$auto_IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_242(fd fd, cmd const[IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_242], arg ptr[in, IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_242])
ioctl$auto_IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_2x996(fd fd, cmd const[IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_2x996], arg ptr[in, IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_2x996])
ioctl$auto_IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_484(fd fd, cmd const[IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_484], arg ptr[in, IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_484])
ioctl$auto_IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_996(fd fd, cmd const[IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_996], arg ptr[in, IEEE80211_HE_PHY_CAP8_DCM_MAX_RU_996])
ioctl$auto_IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_0US(fd fd, cmd const[IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_0US], arg ptr[in, IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_0US])
ioctl$auto_IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_16US(fd fd, cmd const[IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_16US], arg ptr[in, IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_16US])
ioctl$auto_IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_8US(fd fd, cmd const[IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_8US], arg ptr[in, IEEE80211_HE_PHY_CAP9_NOMINAL_PKT_PADDING_8US])
ioctl$auto_IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_11454(fd fd, cmd const[IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_11454], arg ptr[in, IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_11454])
ioctl$auto_IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_3895(fd fd, cmd const[IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_3895], arg ptr[in, IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_3895])
ioctl$auto_IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_7991(fd fd, cmd const[IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_7991], arg ptr[in, IEEE80211_VHT_CAP_MAX_MPDU_LENGTH_7991])
ioctl$auto_IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160_80PLUS80MHZ(fd fd, cmd const[IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160_80PLUS80MHZ], arg ptr[in, IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160_80PLUS80MHZ])
ioctl$auto_IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160MHZ(fd fd, cmd const[IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160MHZ], arg ptr[in, IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160MHZ])
ioctl$auto_IIO_BUFFER_DIRECTION_IN(fd fd, cmd const[IIO_BUFFER_DIRECTION_IN], arg ptr[in, IIO_BUFFER_DIRECTION_IN])
ioctl$auto_IIO_BUFFER_DIRECTION_OUT(fd fd, cmd const[IIO_BUFFER_DIRECTION_OUT], arg ptr[in, IIO_BUFFER_DIRECTION_OUT])
ioctl$auto_IIO_BUFFER_DMABUF_ATTACH_IOCTL(fd fd, cmd const[IIO_BUFFER_DMABUF_ATTACH_IOCTL], arg ptr[in, IIO_BUFFER_DMABUF_ATTACH_IOCTL])
ioctl$auto_IIO_BUFFER_DMABUF_DETACH_IOCTL(fd fd, cmd const[IIO_BUFFER_DMABUF_DETACH_IOCTL], arg ptr[in, IIO_BUFFER_DMABUF_DETACH_IOCTL])
ioctl$auto_IIO_BUFFER_DMABUF_ENQUEUE_IOCTL(fd fd, cmd const[IIO_BUFFER_DMABUF_ENQUEUE_IOCTL], arg ptr[in, IIO_BUFFER_DMABUF_ENQUEUE_IOCTL])
ioctl$auto_IMADDTIMER(fd fd, cmd const[IMADDTIMER], arg ptr[in, IMADDTIMER])
ioctl$auto_IMDELTIMER(fd fd, cmd const[IMDELTIMER], arg ptr[in, IMDELTIMER])
ioctl$auto_INOTIFY_IOC_SETNEXTWD(fd fd, cmd const[INOTIFY_IOC_SETNEXTWD], arg ptr[in, INOTIFY_IOC_SETNEXTWD])
ioctl$auto_INTERFACE(fd fd, cmd const[INTERFACE], arg ptr[in, INTERFACE])
ioctl$auto_IOCNR_GET_BUS_ADDRESS(fd fd, cmd const[IOCNR_GET_BUS_ADDRESS], arg ptr[in, IOCNR_GET_BUS_ADDRESS])
ioctl$auto_IOCNR_GET_DEVICE_ID(fd fd, cmd const[IOCNR_GET_DEVICE_ID], arg ptr[in, IOCNR_GET_DEVICE_ID])
ioctl$auto_IOCNR_GET_PROTOCOLS(fd fd, cmd const[IOCNR_GET_PROTOCOLS], arg ptr[in, IOCNR_GET_PROTOCOLS])
ioctl$auto_IOCNR_GET_VID_PID(fd fd, cmd const[IOCNR_GET_VID_PID], arg ptr[in, IOCNR_GET_VID_PID])
ioctl$auto_IOCNR_HP_SET_CHANNEL(fd fd, cmd const[IOCNR_HP_SET_CHANNEL], arg ptr[in, IOCNR_HP_SET_CHANNEL])
ioctl$auto__IOC_NR(PERF_EVENT_IOC_ID)(fd fd, cmd const[_IOC_NR(PERF_EVENT_IOC_ID)], arg ptr[in, _IOC_NR(PERF_EVENT_IOC_ID)])
ioctl$auto__IOC_NR(PERF_EVENT_IOC_MODIFY_ATTRIBUTES)(fd fd, cmd const[_IOC_NR(PERF_EVENT_IOC_MODIFY_ATTRIBUTES)], arg ptr[in, _IOC_NR(PERF_EVENT_IOC_MODIFY_ATTRIBUTES)])
ioctl$auto__IOC_NR(PERF_EVENT_IOC_QUERY_BPF)(fd fd, cmd const[_IOC_NR(PERF_EVENT_IOC_QUERY_BPF)], arg ptr[in, _IOC_NR(PERF_EVENT_IOC_QUERY_BPF)])
ioctl$auto__IOC_NR(PERF_EVENT_IOC_SET_FILTER)(fd fd, cmd const[_IOC_NR(PERF_EVENT_IOC_SET_FILTER)], arg ptr[in, _IOC_NR(PERF_EVENT_IOC_SET_FILTER)])
ioctl$auto_IOCNR_SET_PROTOCOL(fd fd, cmd const[IOCNR_SET_PROTOCOL], arg ptr[in, IOCNR_SET_PROTOCOL])
ioctl$auto_IOCNR_SOFT_RESET(fd fd, cmd const[IOCNR_SOFT_RESET], arg ptr[in, IOCNR_SOFT_RESET])
ioctl$auto_IOCTL_GET_DRV_VERSION(fd fd, cmd const[IOCTL_GET_DRV_VERSION], arg ptr[in, IOCTL_GET_DRV_VERSION])
ioctl$auto_IOCTL_GET_HARD_VERSION(fd fd, cmd const[IOCTL_GET_HARD_VERSION], arg ptr[in, IOCTL_GET_HARD_VERSION])
ioctl$auto_IOCTL_MEI_CONNECT_CLIENT(fd fd, cmd const[IOCTL_MEI_CONNECT_CLIENT], arg ptr[in, IOCTL_MEI_CONNECT_CLIENT])
ioctl$auto_IOCTL_MEI_CONNECT_CLIENT_VTAG(fd fd, cmd const[IOCTL_MEI_CONNECT_CLIENT_VTAG], arg ptr[in, IOCTL_MEI_CONNECT_CLIENT_VTAG])
ioctl$auto_IOCTL_MEI_NOTIFY_GET(fd fd, cmd const[IOCTL_MEI_NOTIFY_GET], arg ptr[in, IOCTL_MEI_NOTIFY_GET])
ioctl$auto_IOCTL_MEI_NOTIFY_SET(fd fd, cmd const[IOCTL_MEI_NOTIFY_SET], arg ptr[in, IOCTL_MEI_NOTIFY_SET])
ioctl$auto_IOCTL_VMCI_CTX_ADD_NOTIFICATION(fd fd, cmd const[IOCTL_VMCI_CTX_ADD_NOTIFICATION], arg ptr[in, IOCTL_VMCI_CTX_ADD_NOTIFICATION])
ioctl$auto_IOCTL_VMCI_CTX_GET_CPT_STATE(fd fd, cmd const[IOCTL_VMCI_CTX_GET_CPT_STATE], arg ptr[in, IOCTL_VMCI_CTX_GET_CPT_STATE])
ioctl$auto_IOCTL_VMCI_CTX_REMOVE_NOTIFICATION(fd fd, cmd const[IOCTL_VMCI_CTX_REMOVE_NOTIFICATION], arg ptr[in, IOCTL_VMCI_CTX_REMOVE_NOTIFICATION])
ioctl$auto_IOCTL_VMCI_CTX_SET_CPT_STATE(fd fd, cmd const[IOCTL_VMCI_CTX_SET_CPT_STATE], arg ptr[in, IOCTL_VMCI_CTX_SET_CPT_STATE])
ioctl$auto_IOCTL_VMCI_DATAGRAM_RECEIVE(fd fd, cmd const[IOCTL_VMCI_DATAGRAM_RECEIVE], arg ptr[in, IOCTL_VMCI_DATAGRAM_RECEIVE])
ioctl$auto_IOCTL_VMCI_DATAGRAM_SEND(fd fd, cmd const[IOCTL_VMCI_DATAGRAM_SEND], arg ptr[in, IOCTL_VMCI_DATAGRAM_SEND])
ioctl$auto_IOCTL_VMCI_GET_CONTEXT_ID(fd fd, cmd const[IOCTL_VMCI_GET_CONTEXT_ID], arg ptr[in, IOCTL_VMCI_GET_CONTEXT_ID])
ioctl$auto_IOCTL_VMCI_INIT_CONTEXT(fd fd, cmd const[IOCTL_VMCI_INIT_CONTEXT], arg ptr[in, IOCTL_VMCI_INIT_CONTEXT])
ioctl$auto_IOCTL_VMCI_NOTIFICATIONS_RECEIVE(fd fd, cmd const[IOCTL_VMCI_NOTIFICATIONS_RECEIVE], arg ptr[in, IOCTL_VMCI_NOTIFICATIONS_RECEIVE])
ioctl$auto_IOCTL_VMCI_NOTIFY_RESOURCE(fd fd, cmd const[IOCTL_VMCI_NOTIFY_RESOURCE], arg ptr[in, IOCTL_VMCI_NOTIFY_RESOURCE])
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_ALLOC(fd fd, cmd const[IOCTL_VMCI_QUEUEPAIR_ALLOC], arg ptr[in, IOCTL_VMCI_QUEUEPAIR_ALLOC])
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_DETACH(fd fd, cmd const[IOCTL_VMCI_QUEUEPAIR_DETACH], arg ptr[in, IOCTL_VMCI_QUEUEPAIR_DETACH])
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE(fd fd, cmd const[IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE], arg ptr[in, IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE])
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_SETVA(fd fd, cmd const[IOCTL_VMCI_QUEUEPAIR_SETVA], arg ptr[in, IOCTL_VMCI_QUEUEPAIR_SETVA])
ioctl$auto_IOCTL_VMCI_SET_NOTIFY(fd fd, cmd const[IOCTL_VMCI_SET_NOTIFY], arg ptr[in, IOCTL_VMCI_SET_NOTIFY])
ioctl$auto_IOCTL_VMCI_VERSION2(fd fd, cmd const[IOCTL_VMCI_VERSION2], arg ptr[in, IOCTL_VMCI_VERSION2])
ioctl$auto_IOCTL_VMCI_VERSION(fd fd, cmd const[IOCTL_VMCI_VERSION], arg ptr[in, IOCTL_VMCI_VERSION])
ioctl$auto_IOCTL_WDM_MAX_COMMAND(fd fd, cmd const[IOCTL_WDM_MAX_COMMAND], arg ptr[in, IOCTL_WDM_MAX_COMMAND])
ioctl$auto_IOC_WATCH_QUEUE_SET_FILTER(fd fd, cmd const[IOC_WATCH_QUEUE_SET_FILTER], arg ptr[in, IOC_WATCH_QUEUE_SET_FILTER])
ioctl$auto_IOC_WATCH_QUEUE_SET_SIZE(fd fd, cmd const[IOC_WATCH_QUEUE_SET_SIZE], arg ptr[in, IOC_WATCH_QUEUE_SET_SIZE])
ioctl$auto_IOW_GETINFO(fd fd, cmd const[IOW_GETINFO], arg ptr[in, IOW_GETINFO])
ioctl$auto_IOW_READ(fd fd, cmd const[IOW_READ], arg ptr[in, IOW_READ])
ioctl$auto_IOW_WRITE(fd fd, cmd const[IOW_WRITE], arg ptr[in, IOW_WRITE])
ioctl$auto_JS_GET_ALL(fd fd, cmd const[JS_GET_ALL], arg ptr[in, JS_GET_ALL])
ioctl$auto_JS_GET_TIMELIMIT(fd fd, cmd const[JS_GET_TIMELIMIT], arg ptr[in, JS_GET_TIMELIMIT])
ioctl$auto_JS_SET_ALL(fd fd, cmd const[JS_SET_ALL], arg ptr[in, JS_SET_ALL])
ioctl$auto_JS_SET_TIMELIMIT(fd fd, cmd const[JS_SET_TIMELIMIT], arg ptr[in, JS_SET_TIMELIMIT])
ioctl$auto_KCOV_INIT_TRACE(fd fd, cmd const[KCOV_INIT_TRACE], arg ptr[in, KCOV_INIT_TRACE])
ioctl$auto_KCOV_REMOTE_ENABLE(fd fd, cmd const[KCOV_REMOTE_ENABLE], arg ptr[in, KCOV_REMOTE_ENABLE])
ioctl$auto_KVM_CHECK_EXTENSION(fd fd, cmd const[KVM_CHECK_EXTENSION], arg ptr[in, KVM_CHECK_EXTENSION])
ioctl$auto_KVM_CLEAR_DIRTY_LOG(fd fd, cmd const[KVM_CLEAR_DIRTY_LOG], arg ptr[in, KVM_CLEAR_DIRTY_LOG])
ioctl$auto_KVM_CREATE_DEVICE(fd fd, cmd const[KVM_CREATE_DEVICE], arg ptr[in, KVM_CREATE_DEVICE])
ioctl$auto_KVM_CREATE_GUEST_MEMFD(fd fd, cmd const[KVM_CREATE_GUEST_MEMFD], arg ptr[in, KVM_CREATE_GUEST_MEMFD])
ioctl$auto_KVM_CREATE_VCPU(fd fd, cmd const[KVM_CREATE_VCPU], arg ptr[in, KVM_CREATE_VCPU])
ioctl$auto_KVM_CREATE_VM(fd fd, cmd const[KVM_CREATE_VM], arg ptr[in, KVM_CREATE_VM])
ioctl$auto_KVM_ENABLE_CAP(fd fd, cmd const[KVM_ENABLE_CAP], arg ptr[in, KVM_ENABLE_CAP])
ioctl$auto_KVM_GET_API_VERSION(fd fd, cmd const[KVM_GET_API_VERSION], arg ptr[in, KVM_GET_API_VERSION])
ioctl$auto_KVM_GET_DEVICE_ATTR(fd fd, cmd const[KVM_GET_DEVICE_ATTR], arg ptr[in, KVM_GET_DEVICE_ATTR])
ioctl$auto_KVM_GET_DIRTY_LOG(fd fd, cmd const[KVM_GET_DIRTY_LOG], arg ptr[in, KVM_GET_DIRTY_LOG])
ioctl$auto_KVM_GET_STATS_FD(fd fd, cmd const[KVM_GET_STATS_FD], arg ptr[in, KVM_GET_STATS_FD])
ioctl$auto_KVM_GET_VCPU_MMAP_SIZE(fd fd, cmd const[KVM_GET_VCPU_MMAP_SIZE], arg ptr[in, KVM_GET_VCPU_MMAP_SIZE])
ioctl$auto_KVM_HAS_DEVICE_ATTR(fd fd, cmd const[KVM_HAS_DEVICE_ATTR], arg ptr[in, KVM_HAS_DEVICE_ATTR])
ioctl$auto_KVM_IOEVENTFD(fd fd, cmd const[KVM_IOEVENTFD], arg ptr[in, KVM_IOEVENTFD])
ioctl$auto_KVM_IRQFD(fd fd, cmd const[KVM_IRQFD], arg ptr[in, KVM_IRQFD])
ioctl$auto_KVM_IRQ_LINE(fd fd, cmd const[KVM_IRQ_LINE], arg ptr[in, KVM_IRQ_LINE])
ioctl$auto_KVM_IRQ_LINE_STATUS(fd fd, cmd const[KVM_IRQ_LINE_STATUS], arg ptr[in, KVM_IRQ_LINE_STATUS])
ioctl$auto_KVM_REGISTER_COALESCED_MMIO(fd fd, cmd const[KVM_REGISTER_COALESCED_MMIO], arg ptr[in, KVM_REGISTER_COALESCED_MMIO])
ioctl$auto_KVM_RESET_DIRTY_RINGS(fd fd, cmd const[KVM_RESET_DIRTY_RINGS], arg ptr[in, KVM_RESET_DIRTY_RINGS])
ioctl$auto_KVM_SET_DEVICE_ATTR(fd fd, cmd const[KVM_SET_DEVICE_ATTR], arg ptr[in, KVM_SET_DEVICE_ATTR])
ioctl$auto_KVM_SET_GSI_ROUTING(fd fd, cmd const[KVM_SET_GSI_ROUTING], arg ptr[in, KVM_SET_GSI_ROUTING])
ioctl$auto_KVM_SET_MEMORY_ATTRIBUTES(fd fd, cmd const[KVM_SET_MEMORY_ATTRIBUTES], arg ptr[in, KVM_SET_MEMORY_ATTRIBUTES])
ioctl$auto_KVM_SET_USER_MEMORY_REGION2(fd fd, cmd const[KVM_SET_USER_MEMORY_REGION2], arg ptr[in, KVM_SET_USER_MEMORY_REGION2])
ioctl$auto_KVM_SET_USER_MEMORY_REGION(fd fd, cmd const[KVM_SET_USER_MEMORY_REGION], arg ptr[in, KVM_SET_USER_MEMORY_REGION])
ioctl$auto_KVM_SIGNAL_MSI(fd fd, cmd const[KVM_SIGNAL_MSI], arg ptr[in, KVM_SIGNAL_MSI])
ioctl$auto_KVM_UNREGISTER_COALESCED_MMIO(fd fd, cmd const[KVM_UNREGISTER_COALESCED_MMIO], arg ptr[in, KVM_UNREGISTER_COALESCED_MMIO])
ioctl$auto_LOOP_CTL_ADD(fd fd, cmd const[LOOP_CTL_ADD], arg ptr[in, LOOP_CTL_ADD])
ioctl$auto_LOOP_CTL_GET_FREE(fd fd, cmd const[LOOP_CTL_GET_FREE], arg ptr[in, LOOP_CTL_GET_FREE])
ioctl$auto_LOOP_CTL_REMOVE(fd fd, cmd const[LOOP_CTL_REMOVE], arg ptr[in, LOOP_CTL_REMOVE])
ioctl$auto_LPABORT(fd fd, cmd const[LPABORT], arg ptr[in, LPABORT])
ioctl$auto_LPGETSTATUS(fd fd, cmd const[LPGETSTATUS], arg ptr[in, LPGETSTATUS])
ioctl$auto_MEDIA_REQUEST_IOC_QUEUE(fd fd, cmd const[MEDIA_REQUEST_IOC_QUEUE], arg ptr[in, MEDIA_REQUEST_IOC_QUEUE])
ioctl$auto_MEDIA_REQUEST_IOC_REINIT(fd fd, cmd const[MEDIA_REQUEST_IOC_REINIT], arg ptr[in, MEDIA_REQUEST_IOC_REINIT])
ioctl$auto_MEMREADOOB32(fd fd, cmd const[MEMREADOOB32], arg ptr[in, MEMREADOOB32])
ioctl$auto_MEMWRITEOOB32(fd fd, cmd const[MEMWRITEOOB32], arg ptr[in, MEMWRITEOOB32])
ioctl$auto_MINOR_DISCOVER(fd fd, cmd const[MINOR_DISCOVER], arg ptr[in, MINOR_DISCOVER])
ioctl$auto_MINOR_FLUSH(fd fd, cmd const[MINOR_FLUSH], arg ptr[in, MINOR_FLUSH])
ioctl$auto_MINOR_INTERFACES(fd fd, cmd const[MINOR_INTERFACES], arg ptr[in, MINOR_INTERFACES])
ioctl$auto_MINOR_REVALIDATE(fd fd, cmd const[MINOR_REVALIDATE], arg ptr[in, MINOR_REVALIDATE])
ioctl$auto_MON_IOCG_STATS(fd fd, cmd const[MON_IOCG_STATS], arg ptr[in, MON_IOCG_STATS])
ioctl$auto_MON_IOCH_MFLUSH(fd fd, cmd const[MON_IOCH_MFLUSH], arg ptr[in, MON_IOCH_MFLUSH])
ioctl$auto_MON_IOCQ_RING_SIZE(fd fd, cmd const[MON_IOCQ_RING_SIZE], arg ptr[in, MON_IOCQ_RING_SIZE])
ioctl$auto_MON_IOCQ_URB_LEN(fd fd, cmd const[MON_IOCQ_URB_LEN], arg ptr[in, MON_IOCQ_URB_LEN])
ioctl$auto_MON_IOCT_RING_SIZE(fd fd, cmd const[MON_IOCT_RING_SIZE], arg ptr[in, MON_IOCT_RING_SIZE])
ioctl$auto_MON_IOCX_GET32(fd fd, cmd const[MON_IOCX_GET32], arg ptr[in, MON_IOCX_GET32])
ioctl$auto_MON_IOCX_GET(fd fd, cmd const[MON_IOCX_GET], arg ptr[in, MON_IOCX_GET])
ioctl$auto_MON_IOCX_GETX32(fd fd, cmd const[MON_IOCX_GETX32], arg ptr[in, MON_IOCX_GETX32])
ioctl$auto_MON_IOCX_GETX(fd fd, cmd const[MON_IOCX_GETX], arg ptr[in, MON_IOCX_GETX])
ioctl$auto_MON_IOCX_MFETCH32(fd fd, cmd const[MON_IOCX_MFETCH32], arg ptr[in, MON_IOCX_MFETCH32])
ioctl$auto_MON_IOCX_MFETCH(fd fd, cmd const[MON_IOCX_MFETCH], arg ptr[in, MON_IOCX_MFETCH])
ioctl$auto_MTD_FILE_MODE_OTP_FACTORY(fd fd, cmd const[MTD_FILE_MODE_OTP_FACTORY], arg ptr[in, MTD_FILE_MODE_OTP_FACTORY])
ioctl$auto_MTD_FILE_MODE_OTP_USER(fd fd, cmd const[MTD_FILE_MODE_OTP_USER], arg ptr[in, MTD_FILE_MODE_OTP_USER])
ioctl$auto_MTD_FILE_MODE_RAW(fd fd, cmd const[MTD_FILE_MODE_RAW], arg ptr[in, MTD_FILE_MODE_RAW])
ioctl$auto_MTIOCGET32(fd fd, cmd const[MTIOCGET32], arg ptr[in, MTIOCGET32])
ioctl$auto_MTIOCPOS32(fd fd, cmd const[MTIOCPOS32], arg ptr[in, MTIOCPOS32])
ioctl$auto_NVME_CTRL_LIVE(fd fd, cmd const[NVME_CTRL_LIVE], arg ptr[in, NVME_CTRL_LIVE])
ioctl$auto_NVRAM_INIT(fd fd, cmd const[NVRAM_INIT], arg ptr[in, NVRAM_INIT])
ioctl$auto_NVRAM_SETCKS(fd fd, cmd const[NVRAM_SETCKS], arg ptr[in, NVRAM_SETCKS])
ioctl$auto_O2HB_DB_TYPE_FAILEDREGIONS(fd fd, cmd const[O2HB_DB_TYPE_FAILEDREGIONS], arg ptr[in, O2HB_DB_TYPE_FAILEDREGIONS])
ioctl$auto_O2HB_DB_TYPE_LIVENODES(fd fd, cmd const[O2HB_DB_TYPE_LIVENODES], arg ptr[in, O2HB_DB_TYPE_LIVENODES])
ioctl$auto_O2HB_DB_TYPE_LIVEREGIONS(fd fd, cmd const[O2HB_DB_TYPE_LIVEREGIONS], arg ptr[in, O2HB_DB_TYPE_LIVEREGIONS])
ioctl$auto_O2HB_DB_TYPE_QUORUMREGIONS(fd fd, cmd const[O2HB_DB_TYPE_QUORUMREGIONS], arg ptr[in, O2HB_DB_TYPE_QUORUMREGIONS])
ioctl$auto_O2HB_DB_TYPE_REGION_ELAPSED_TIME(fd fd, cmd const[O2HB_DB_TYPE_REGION_ELAPSED_TIME], arg ptr[in, O2HB_DB_TYPE_REGION_ELAPSED_TIME])
ioctl$auto_O2HB_DB_TYPE_REGION_LIVENODES(fd fd, cmd const[O2HB_DB_TYPE_REGION_LIVENODES], arg ptr[in, O2HB_DB_TYPE_REGION_LIVENODES])
ioctl$auto_O2HB_DB_TYPE_REGION_NUMBER(fd fd, cmd const[O2HB_DB_TYPE_REGION_NUMBER], arg ptr[in, O2HB_DB_TYPE_REGION_NUMBER])
ioctl$auto_O2HB_DB_TYPE_REGION_PINNED(fd fd, cmd const[O2HB_DB_TYPE_REGION_PINNED], arg ptr[in, O2HB_DB_TYPE_REGION_PINNED])
ioctl$auto_OCFS2_CONTROL_HANDSHAKE_INVALID(fd fd, cmd const[OCFS2_CONTROL_HANDSHAKE_INVALID], arg ptr[in, OCFS2_CONTROL_HANDSHAKE_INVALID])
ioctl$auto_OCFS2_CONTROL_HANDSHAKE_PROTOCOL(fd fd, cmd const[OCFS2_CONTROL_HANDSHAKE_PROTOCOL], arg ptr[in, OCFS2_CONTROL_HANDSHAKE_PROTOCOL])
ioctl$auto_OCFS2_CONTROL_HANDSHAKE_READ(fd fd, cmd const[OCFS2_CONTROL_HANDSHAKE_READ], arg ptr[in, OCFS2_CONTROL_HANDSHAKE_READ])
ioctl$auto_OCFS2_CONTROL_HANDSHAKE_VALID(fd fd, cmd const[OCFS2_CONTROL_HANDSHAKE_VALID], arg ptr[in, OCFS2_CONTROL_HANDSHAKE_VALID])
ioctl$auto_OTG_STATE_A_HOST(fd fd, cmd const[OTG_STATE_A_HOST], arg ptr[in, OTG_STATE_A_HOST])
ioctl$auto_OTG_STATE_A_WAIT_BCON(fd fd, cmd const[OTG_STATE_A_WAIT_BCON], arg ptr[in, OTG_STATE_A_WAIT_BCON])
ioctl$auto_PAGEMAP_SCAN(fd fd, cmd const[PAGEMAP_SCAN], arg ptr[in, PAGEMAP_SCAN])
ioctl$auto_PIDFD_GET_CGROUP_NAMESPACE(fd fd, cmd const[PIDFD_GET_CGROUP_NAMESPACE], arg ptr[in, PIDFD_GET_CGROUP_NAMESPACE])
ioctl$auto_PIDFD_GET_IPC_NAMESPACE(fd fd, cmd const[PIDFD_GET_IPC_NAMESPACE], arg ptr[in, PIDFD_GET_IPC_NAMESPACE])
ioctl$auto_PIDFD_GET_MNT_NAMESPACE(fd fd, cmd const[PIDFD_GET_MNT_NAMESPACE], arg ptr[in, PIDFD_GET_MNT_NAMESPACE])
ioctl$auto_PIDFD_GET_NET_NAMESPACE(fd fd, cmd const[PIDFD_GET_NET_NAMESPACE], arg ptr[in, PIDFD_GET_NET_NAMESPACE])
ioctl$auto_PIDFD_GET_PID_FOR_CHILDREN_NAMESPACE(fd fd, cmd const[PIDFD_GET_PID_FOR_CHILDREN_NAMESPACE], arg ptr[in, PIDFD_GET_PID_FOR_CHILDREN_NAMESPACE])
ioctl$auto_PIDFD_GET_PID_NAMESPACE(fd fd, cmd const[PIDFD_GET_PID_NAMESPACE], arg ptr[in, PIDFD_GET_PID_NAMESPACE])
ioctl$auto_PIDFD_GET_TIME_FOR_CHILDREN_NAMESPACE(fd fd, cmd const[PIDFD_GET_TIME_FOR_CHILDREN_NAMESPACE], arg ptr[in, PIDFD_GET_TIME_FOR_CHILDREN_NAMESPACE])
ioctl$auto_PIDFD_GET_TIME_NAMESPACE(fd fd, cmd const[PIDFD_GET_TIME_NAMESPACE], arg ptr[in, PIDFD_GET_TIME_NAMESPACE])
ioctl$auto_PIDFD_GET_USER_NAMESPACE(fd fd, cmd const[PIDFD_GET_USER_NAMESPACE], arg ptr[in, PIDFD_GET_USER_NAMESPACE])
ioctl$auto_PIDFD_GET_UTS_NAMESPACE(fd fd, cmd const[PIDFD_GET_UTS_NAMESPACE], arg ptr[in, PIDFD_GET_UTS_NAMESPACE])
ioctl$auto_PPPIOCBRIDGECHAN(fd fd, cmd const[PPPIOCBRIDGECHAN], arg ptr[in, PPPIOCBRIDGECHAN])
ioctl$auto_PPPIOCCONNECT(fd fd, cmd const[PPPIOCCONNECT], arg ptr[in, PPPIOCCONNECT])
ioctl$auto_PPPIOCDISCONN(fd fd, cmd const[PPPIOCDISCONN], arg ptr[in, PPPIOCDISCONN])
ioctl$auto_PPPIOCGDEBUG(fd fd, cmd const[PPPIOCGDEBUG], arg ptr[in, PPPIOCGDEBUG])
ioctl$auto_PPPIOCGFLAGS(fd fd, cmd const[PPPIOCGFLAGS], arg ptr[in, PPPIOCGFLAGS])
ioctl$auto_PPPIOCGIDLE32(fd fd, cmd const[PPPIOCGIDLE32], arg ptr[in, PPPIOCGIDLE32])
ioctl$auto_PPPIOCGIDLE64(fd fd, cmd const[PPPIOCGIDLE64], arg ptr[in, PPPIOCGIDLE64])
ioctl$auto_PPPIOCGNPMODE(fd fd, cmd const[PPPIOCGNPMODE], arg ptr[in, PPPIOCGNPMODE])
ioctl$auto_PPPIOCGUNIT(fd fd, cmd const[PPPIOCGUNIT], arg ptr[in, PPPIOCGUNIT])
ioctl$auto_PPPIOCSACTIVE32(fd fd, cmd const[PPPIOCSACTIVE32], arg ptr[in, PPPIOCSACTIVE32])
ioctl$auto_PPPIOCSACTIVE(fd fd, cmd const[PPPIOCSACTIVE], arg ptr[in, PPPIOCSACTIVE])
ioctl$auto_PPPIOCSCOMPRESS32(fd fd, cmd const[PPPIOCSCOMPRESS32], arg ptr[in, PPPIOCSCOMPRESS32])
ioctl$auto_PPPIOCSCOMPRESS(fd fd, cmd const[PPPIOCSCOMPRESS], arg ptr[in, PPPIOCSCOMPRESS])
ioctl$auto_PPPIOCSDEBUG(fd fd, cmd const[PPPIOCSDEBUG], arg ptr[in, PPPIOCSDEBUG])
ioctl$auto_PPPIOCSFLAGS(fd fd, cmd const[PPPIOCSFLAGS], arg ptr[in, PPPIOCSFLAGS])
ioctl$auto_PPPIOCSMAXCID(fd fd, cmd const[PPPIOCSMAXCID], arg ptr[in, PPPIOCSMAXCID])
ioctl$auto_PPPIOCSMRRU(fd fd, cmd const[PPPIOCSMRRU], arg ptr[in, PPPIOCSMRRU])
ioctl$auto_PPPIOCSMRU(fd fd, cmd const[PPPIOCSMRU], arg ptr[in, PPPIOCSMRU])
ioctl$auto_PPPIOCSNPMODE(fd fd, cmd const[PPPIOCSNPMODE], arg ptr[in, PPPIOCSNPMODE])
ioctl$auto_PPPIOCSPASS32(fd fd, cmd const[PPPIOCSPASS32], arg ptr[in, PPPIOCSPASS32])
ioctl$auto_PPPIOCSPASS(fd fd, cmd const[PPPIOCSPASS], arg ptr[in, PPPIOCSPASS])
ioctl$auto_PPPIOCUNBRIDGECHAN(fd fd, cmd const[PPPIOCUNBRIDGECHAN], arg ptr[in, PPPIOCUNBRIDGECHAN])
ioctl$auto_PPS_FETCH(fd fd, cmd const[PPS_FETCH], arg ptr[in, PPS_FETCH])
ioctl$auto_PPS_GETCAP(fd fd, cmd const[PPS_GETCAP], arg ptr[in, PPS_GETCAP])
ioctl$auto_PPS_GETPARAMS(fd fd, cmd const[PPS_GETPARAMS], arg ptr[in, PPS_GETPARAMS])
ioctl$auto_PPS_KC_BIND(fd fd, cmd const[PPS_KC_BIND], arg ptr[in, PPS_KC_BIND])
ioctl$auto_PPS_SETPARAMS(fd fd, cmd const[PPS_SETPARAMS], arg ptr[in, PPS_SETPARAMS])
ioctl$auto_PROCMAP_QUERY(fd fd, cmd const[PROCMAP_QUERY], arg ptr[in, PROCMAP_QUERY])
ioctl$auto_RFKILL_IOC_MAX_SIZE(fd fd, cmd const[RFKILL_IOC_MAX_SIZE], arg ptr[in, RFKILL_IOC_MAX_SIZE])
ioctl$auto_RFKILL_IOC_NOINPUT(fd fd, cmd const[RFKILL_IOC_NOINPUT], arg ptr[in, RFKILL_IOC_NOINPUT])
ioctl$auto_RFKILL_OP_CHANGE_ALL(fd fd, cmd const[RFKILL_OP_CHANGE_ALL], arg ptr[in, RFKILL_OP_CHANGE_ALL])
ioctl$auto_RFKILL_OP_CHANGE(fd fd, cmd const[RFKILL_OP_CHANGE], arg ptr[in, RFKILL_OP_CHANGE])
ioctl$auto_RNDADDENTROPY(fd fd, cmd const[RNDADDENTROPY], arg ptr[in, RNDADDENTROPY])
ioctl$auto_RNDADDTOENTCNT(fd fd, cmd const[RNDADDTOENTCNT], arg ptr[in, RNDADDTOENTCNT])
ioctl$auto_RNDCLEARPOOL(fd fd, cmd const[RNDCLEARPOOL], arg ptr[in, RNDCLEARPOOL])
ioctl$auto_RNDGETENTCNT(fd fd, cmd const[RNDGETENTCNT], arg ptr[in, RNDGETENTCNT])
ioctl$auto_RNDRESEEDCRNG(fd fd, cmd const[RNDRESEEDCRNG], arg ptr[in, RNDRESEEDCRNG])
ioctl$auto_RNDZAPENTCNT(fd fd, cmd const[RNDZAPENTCNT], arg ptr[in, RNDZAPENTCNT])
ioctl$auto_ROCCATIOCGREPSIZE(fd fd, cmd const[ROCCATIOCGREPSIZE], arg ptr[in, ROCCATIOCGREPSIZE])
ioctl$auto_RTC_AIE_OFF(fd fd, cmd const[RTC_AIE_OFF], arg ptr[in, RTC_AIE_OFF])
ioctl$auto_RTC_AIE_ON(fd fd, cmd const[RTC_AIE_ON], arg ptr[in, RTC_AIE_ON])
ioctl$auto_RTC_ALM_READ(fd fd, cmd const[RTC_ALM_READ], arg ptr[in, RTC_ALM_READ])
ioctl$auto_RTC_ALM_SET(fd fd, cmd const[RTC_ALM_SET], arg ptr[in, RTC_ALM_SET])
ioctl$auto_RTC_EPOCH_SET32(fd fd, cmd const[RTC_EPOCH_SET32], arg ptr[in, RTC_EPOCH_SET32])
ioctl$auto_RTC_EPOCH_SET(fd fd, cmd const[RTC_EPOCH_SET], arg ptr[in, RTC_EPOCH_SET])
ioctl$auto_RTC_IRQP_READ32(fd fd, cmd const[RTC_IRQP_READ32], arg ptr[in, RTC_IRQP_READ32])
ioctl$auto_RTC_IRQP_READ(fd fd, cmd const[RTC_IRQP_READ], arg ptr[in, RTC_IRQP_READ])
ioctl$auto_RTC_IRQP_SET32(fd fd, cmd const[RTC_IRQP_SET32], arg ptr[in, RTC_IRQP_SET32])
ioctl$auto_RTC_IRQP_SET(fd fd, cmd const[RTC_IRQP_SET], arg ptr[in, RTC_IRQP_SET])
ioctl$auto_RTC_PARAM_CORRECTION(fd fd, cmd const[RTC_PARAM_CORRECTION], arg ptr[in, RTC_PARAM_CORRECTION])
ioctl$auto_RTC_PARAM_FEATURES(fd fd, cmd const[RTC_PARAM_FEATURES], arg ptr[in, RTC_PARAM_FEATURES])
ioctl$auto_RTC_PARAM_GET(fd fd, cmd const[RTC_PARAM_GET], arg ptr[in, RTC_PARAM_GET])
ioctl$auto_RTC_PARAM_SET(fd fd, cmd const[RTC_PARAM_SET], arg ptr[in, RTC_PARAM_SET])
ioctl$auto_RTC_PIE_OFF(fd fd, cmd const[RTC_PIE_OFF], arg ptr[in, RTC_PIE_OFF])
ioctl$auto_RTC_PIE_ON(fd fd, cmd const[RTC_PIE_ON], arg ptr[in, RTC_PIE_ON])
ioctl$auto_RTC_RD_TIME(fd fd, cmd const[RTC_RD_TIME], arg ptr[in, RTC_RD_TIME])
ioctl$auto_RTC_SET_TIME(fd fd, cmd const[RTC_SET_TIME], arg ptr[in, RTC_SET_TIME])
ioctl$auto_RTC_UIE_OFF(fd fd, cmd const[RTC_UIE_OFF], arg ptr[in, RTC_UIE_OFF])
ioctl$auto_RTC_UIE_ON(fd fd, cmd const[RTC_UIE_ON], arg ptr[in, RTC_UIE_ON])
ioctl$auto_RTC_WKALM_RD(fd fd, cmd const[RTC_WKALM_RD], arg ptr[in, RTC_WKALM_RD])
ioctl$auto_RTC_WKALM_SET(fd fd, cmd const[RTC_WKALM_SET], arg ptr[in, RTC_WKALM_SET])
ioctl$auto_SCSI_IOCTL_GET_BUS_NUMBER(fd fd, cmd const[SCSI_IOCTL_GET_BUS_NUMBER], arg ptr[in, SCSI_IOCTL_GET_BUS_NUMBER])
ioctl$auto_SCSI_IOCTL_GET_IDLUN(fd fd, cmd const[SCSI_IOCTL_GET_IDLUN], arg ptr[in, SCSI_IOCTL_GET_IDLUN])
ioctl$auto_SCSI_IOCTL_SEND_COMMAND(fd fd, cmd const[SCSI_IOCTL_SEND_COMMAND], arg ptr[in, SCSI_IOCTL_SEND_COMMAND])
ioctl$auto_SECCOMP_IOCTL_NOTIF_ID_VALID(fd fd, cmd const[SECCOMP_IOCTL_NOTIF_ID_VALID], arg ptr[in, SECCOMP_IOCTL_NOTIF_ID_VALID])
ioctl$auto_SECCOMP_IOCTL_NOTIF_ID_VALID_WRONG_DIR(fd fd, cmd const[SECCOMP_IOCTL_NOTIF_ID_VALID_WRONG_DIR], arg ptr[in, SECCOMP_IOCTL_NOTIF_ID_VALID_WRONG_DIR])
ioctl$auto_SECCOMP_IOCTL_NOTIF_RECV(fd fd, cmd const[SECCOMP_IOCTL_NOTIF_RECV], arg ptr[in, SECCOMP_IOCTL_NOTIF_RECV])
ioctl$auto_SECCOMP_IOCTL_NOTIF_SEND(fd fd, cmd const[SECCOMP_IOCTL_NOTIF_SEND], arg ptr[in, SECCOMP_IOCTL_NOTIF_SEND])
ioctl$auto_SECCOMP_IOCTL_NOTIF_SET_FLAGS(fd fd, cmd const[SECCOMP_IOCTL_NOTIF_SET_FLAGS], arg ptr[in, SECCOMP_IOCTL_NOTIF_SET_FLAGS])
ioctl$auto_SEEK_CUR(fd fd, cmd const[SEEK_CUR], arg ptr[in, SEEK_CUR])
ioctl$auto_SEEK_DATA(fd fd, cmd const[SEEK_DATA], arg ptr[in, SEEK_DATA])
ioctl$auto_SEEK_END(fd fd, cmd const[SEEK_END], arg ptr[in, SEEK_END])
ioctl$auto_SEEK_HOLE(fd fd, cmd const[SEEK_HOLE], arg ptr[in, SEEK_HOLE])
ioctl$auto_SEEK_SET(fd fd, cmd const[SEEK_SET], arg ptr[in, SEEK_SET])
ioctl$auto_SG_EMULATED_HOST(fd fd, cmd const[SG_EMULATED_HOST], arg ptr[in, SG_EMULATED_HOST])
ioctl$auto_SG_GET_COMMAND_Q(fd fd, cmd const[SG_GET_COMMAND_Q], arg ptr[in, SG_GET_COMMAND_Q])
ioctl$auto_SG_GET_RESERVED_SIZE(fd fd, cmd const[SG_GET_RESERVED_SIZE], arg ptr[in, SG_GET_RESERVED_SIZE])
ioctl$auto_SG_GET_TIMEOUT(fd fd, cmd const[SG_GET_TIMEOUT], arg ptr[in, SG_GET_TIMEOUT])
ioctl$auto_SG_GET_VERSION_NUM(fd fd, cmd const[SG_GET_VERSION_NUM], arg ptr[in, SG_GET_VERSION_NUM])
ioctl$auto_SG_IO(fd fd, cmd const[SG_IO], arg ptr[in, SG_IO])
ioctl$auto_SG_SET_COMMAND_Q(fd fd, cmd const[SG_SET_COMMAND_Q], arg ptr[in, SG_SET_COMMAND_Q])
ioctl$auto_SG_SET_RESERVED_SIZE(fd fd, cmd const[SG_SET_RESERVED_SIZE], arg ptr[in, SG_SET_RESERVED_SIZE])
ioctl$auto_SG_SET_TIMEOUT(fd fd, cmd const[SG_SET_TIMEOUT], arg ptr[in, SG_SET_TIMEOUT])
ioctl$auto_SGX_IOC_VEPC_REMOVE_ALL(fd fd, cmd const[SGX_IOC_VEPC_REMOVE_ALL], arg ptr[in, SGX_IOC_VEPC_REMOVE_ALL])
ioctl$auto_SIOCGIFHWADDR(fd fd, cmd const[SIOCGIFHWADDR], arg ptr[in, SIOCGIFHWADDR])
ioctl$auto_SIOCSIFHWADDR(fd fd, cmd const[SIOCSIFHWADDR], arg ptr[in, SIOCSIFHWADDR])
ioctl$auto_SISUSB_COMMAND(fd fd, cmd const[SISUSB_COMMAND], arg ptr[in, SISUSB_COMMAND])
ioctl$auto_SISUSB_GET_CONFIG(fd fd, cmd const[SISUSB_GET_CONFIG], arg ptr[in, SISUSB_GET_CONFIG])
ioctl$auto_SISUSB_GET_CONFIG_SIZE(fd fd, cmd const[SISUSB_GET_CONFIG_SIZE], arg ptr[in, SISUSB_GET_CONFIG_SIZE])
ioctl$auto_SNAPSHOT_ALLOC_SWAP_PAGE(fd fd, cmd const[SNAPSHOT_ALLOC_SWAP_PAGE], arg ptr[in, SNAPSHOT_ALLOC_SWAP_PAGE])
ioctl$auto_SNAPSHOT_ATOMIC_RESTORE(fd fd, cmd const[SNAPSHOT_ATOMIC_RESTORE], arg ptr[in, SNAPSHOT_ATOMIC_RESTORE])
ioctl$auto_SNAPSHOT_AVAIL_SWAP_SIZE(fd fd, cmd const[SNAPSHOT_AVAIL_SWAP_SIZE], arg ptr[in, SNAPSHOT_AVAIL_SWAP_SIZE])
ioctl$auto_SNAPSHOT_CREATE_IMAGE(fd fd, cmd const[SNAPSHOT_CREATE_IMAGE], arg ptr[in, SNAPSHOT_CREATE_IMAGE])
ioctl$auto_SNAPSHOT_FREE(fd fd, cmd const[SNAPSHOT_FREE], arg ptr[in, SNAPSHOT_FREE])
ioctl$auto_SNAPSHOT_FREE_SWAP_PAGES(fd fd, cmd const[SNAPSHOT_FREE_SWAP_PAGES], arg ptr[in, SNAPSHOT_FREE_SWAP_PAGES])
ioctl$auto_SNAPSHOT_FREEZE(fd fd, cmd const[SNAPSHOT_FREEZE], arg ptr[in, SNAPSHOT_FREEZE])
ioctl$auto_SNAPSHOT_GET_IMAGE_SIZE(fd fd, cmd const[SNAPSHOT_GET_IMAGE_SIZE], arg ptr[in, SNAPSHOT_GET_IMAGE_SIZE])
ioctl$auto_SNAPSHOT_PLATFORM_SUPPORT(fd fd, cmd const[SNAPSHOT_PLATFORM_SUPPORT], arg ptr[in, SNAPSHOT_PLATFORM_SUPPORT])
ioctl$auto_SNAPSHOT_POWER_OFF(fd fd, cmd const[SNAPSHOT_POWER_OFF], arg ptr[in, SNAPSHOT_POWER_OFF])
ioctl$auto_SNAPSHOT_PREF_IMAGE_SIZE(fd fd, cmd const[SNAPSHOT_PREF_IMAGE_SIZE], arg ptr[in, SNAPSHOT_PREF_IMAGE_SIZE])
ioctl$auto_SNAPSHOT_S2RAM(fd fd, cmd const[SNAPSHOT_S2RAM], arg ptr[in, SNAPSHOT_S2RAM])
ioctl$auto_SNAPSHOT_SET_SWAP_AREA(fd fd, cmd const[SNAPSHOT_SET_SWAP_AREA], arg ptr[in, SNAPSHOT_SET_SWAP_AREA])
ioctl$auto_SNAPSHOT_UNFREEZE(fd fd, cmd const[SNAPSHOT_UNFREEZE], arg ptr[in, SNAPSHOT_UNFREEZE])
ioctl$auto_SNDCTL_DSP_CHANNELS(fd fd, cmd const[SNDCTL_DSP_CHANNELS], arg ptr[in, SNDCTL_DSP_CHANNELS])
ioctl$auto_SNDCTL_DSP_GETBLKSIZE(fd fd, cmd const[SNDCTL_DSP_GETBLKSIZE], arg ptr[in, SNDCTL_DSP_GETBLKSIZE])
ioctl$auto_SNDCTL_DSP_GETCAPS(fd fd, cmd const[SNDCTL_DSP_GETCAPS], arg ptr[in, SNDCTL_DSP_GETCAPS])
ioctl$auto_SNDCTL_DSP_GETFMTS(fd fd, cmd const[SNDCTL_DSP_GETFMTS], arg ptr[in, SNDCTL_DSP_GETFMTS])
ioctl$auto_SNDCTL_DSP_GETIPTR(fd fd, cmd const[SNDCTL_DSP_GETIPTR], arg ptr[in, SNDCTL_DSP_GETIPTR])
ioctl$auto_SNDCTL_DSP_GETISPACE(fd fd, cmd const[SNDCTL_DSP_GETISPACE], arg ptr[in, SNDCTL_DSP_GETISPACE])
ioctl$auto_SNDCTL_DSP_GETODELAY(fd fd, cmd const[SNDCTL_DSP_GETODELAY], arg ptr[in, SNDCTL_DSP_GETODELAY])
ioctl$auto_SNDCTL_DSP_GETOPTR(fd fd, cmd const[SNDCTL_DSP_GETOPTR], arg ptr[in, SNDCTL_DSP_GETOPTR])
ioctl$auto_SNDCTL_DSP_GETOSPACE(fd fd, cmd const[SNDCTL_DSP_GETOSPACE], arg ptr[in, SNDCTL_DSP_GETOSPACE])
ioctl$auto_SNDCTL_DSP_GETTRIGGER(fd fd, cmd const[SNDCTL_DSP_GETTRIGGER], arg ptr[in, SNDCTL_DSP_GETTRIGGER])
ioctl$auto_SNDCTL_DSP_MAPINBUF(fd fd, cmd const[SNDCTL_DSP_MAPINBUF], arg ptr[in, SNDCTL_DSP_MAPINBUF])
ioctl$auto_SNDCTL_DSP_MAPOUTBUF(fd fd, cmd const[SNDCTL_DSP_MAPOUTBUF], arg ptr[in, SNDCTL_DSP_MAPOUTBUF])
ioctl$auto_SNDCTL_DSP_NONBLOCK(fd fd, cmd const[SNDCTL_DSP_NONBLOCK], arg ptr[in, SNDCTL_DSP_NONBLOCK])
ioctl$auto_SNDCTL_DSP_POST(fd fd, cmd const[SNDCTL_DSP_POST], arg ptr[in, SNDCTL_DSP_POST])
ioctl$auto_SNDCTL_DSP_PROFILE(fd fd, cmd const[SNDCTL_DSP_PROFILE], arg ptr[in, SNDCTL_DSP_PROFILE])
ioctl$auto_SNDCTL_DSP_RESET(fd fd, cmd const[SNDCTL_DSP_RESET], arg ptr[in, SNDCTL_DSP_RESET])
ioctl$auto_SNDCTL_DSP_SETDUPLEX(fd fd, cmd const[SNDCTL_DSP_SETDUPLEX], arg ptr[in, SNDCTL_DSP_SETDUPLEX])
ioctl$auto_SNDCTL_DSP_SETFMT(fd fd, cmd const[SNDCTL_DSP_SETFMT], arg ptr[in, SNDCTL_DSP_SETFMT])
ioctl$auto_SNDCTL_DSP_SETFRAGMENT(fd fd, cmd const[SNDCTL_DSP_SETFRAGMENT], arg ptr[in, SNDCTL_DSP_SETFRAGMENT])
ioctl$auto_SNDCTL_DSP_SETSYNCRO(fd fd, cmd const[SNDCTL_DSP_SETSYNCRO], arg ptr[in, SNDCTL_DSP_SETSYNCRO])
ioctl$auto_SNDCTL_DSP_SETTRIGGER(fd fd, cmd const[SNDCTL_DSP_SETTRIGGER], arg ptr[in, SNDCTL_DSP_SETTRIGGER])
ioctl$auto_SNDCTL_DSP_SPEED(fd fd, cmd const[SNDCTL_DSP_SPEED], arg ptr[in, SNDCTL_DSP_SPEED])
ioctl$auto_SNDCTL_DSP_STEREO(fd fd, cmd const[SNDCTL_DSP_STEREO], arg ptr[in, SNDCTL_DSP_STEREO])
ioctl$auto_SNDCTL_DSP_SUBDIVIDE(fd fd, cmd const[SNDCTL_DSP_SUBDIVIDE], arg ptr[in, SNDCTL_DSP_SUBDIVIDE])
ioctl$auto_SNDCTL_DSP_SYNC(fd fd, cmd const[SNDCTL_DSP_SYNC], arg ptr[in, SNDCTL_DSP_SYNC])
ioctl$auto_SNDRV_CTL_IOCTL_CARD_INFO(fd fd, cmd const[SNDRV_CTL_IOCTL_CARD_INFO], arg ptr[in, SNDRV_CTL_IOCTL_CARD_INFO])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_ADD32(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_ADD32], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_ADD32])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_ADD(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_ADD], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_ADD])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_INFO32(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_INFO32], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_INFO32])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_INFO(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_INFO], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_INFO])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_LIST32(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_LIST32], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_LIST32])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_LIST(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_LIST], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_LIST])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_LOCK(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_LOCK], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_LOCK])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_READ32(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_READ32], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_READ32])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_READ(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_READ], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_READ])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_REMOVE(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_REMOVE], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_REMOVE])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_REPLACE32(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_REPLACE32], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_REPLACE32])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_REPLACE(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_REPLACE], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_REPLACE])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_UNLOCK(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_UNLOCK], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_UNLOCK])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_WRITE32(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_WRITE32], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_WRITE32])
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_WRITE(fd fd, cmd const[SNDRV_CTL_IOCTL_ELEM_WRITE], arg ptr[in, SNDRV_CTL_IOCTL_ELEM_WRITE])
ioctl$auto_SNDRV_CTL_IOCTL_POWER(fd fd, cmd const[SNDRV_CTL_IOCTL_POWER], arg ptr[in, SNDRV_CTL_IOCTL_POWER])
ioctl$auto_SNDRV_CTL_IOCTL_POWER_STATE(fd fd, cmd const[SNDRV_CTL_IOCTL_POWER_STATE], arg ptr[in, SNDRV_CTL_IOCTL_POWER_STATE])
ioctl$auto_SNDRV_CTL_IOCTL_PVERSION(fd fd, cmd const[SNDRV_CTL_IOCTL_PVERSION], arg ptr[in, SNDRV_CTL_IOCTL_PVERSION])
ioctl$auto_SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS(fd fd, cmd const[SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS], arg ptr[in, SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS])
ioctl$auto_SNDRV_CTL_IOCTL_TLV_COMMAND(fd fd, cmd const[SNDRV_CTL_IOCTL_TLV_COMMAND], arg ptr[in, SNDRV_CTL_IOCTL_TLV_COMMAND])
ioctl$auto_SNDRV_CTL_IOCTL_TLV_READ(fd fd, cmd const[SNDRV_CTL_IOCTL_TLV_READ], arg ptr[in, SNDRV_CTL_IOCTL_TLV_READ])
ioctl$auto_SNDRV_CTL_IOCTL_TLV_WRITE(fd fd, cmd const[SNDRV_CTL_IOCTL_TLV_WRITE], arg ptr[in, SNDRV_CTL_IOCTL_TLV_WRITE])
ioctl$auto_SNDRV_HWDEP_IOCTL_DSP_LOAD32(fd fd, cmd const[SNDRV_HWDEP_IOCTL_DSP_LOAD32], arg ptr[in, SNDRV_HWDEP_IOCTL_DSP_LOAD32])
ioctl$auto_SNDRV_HWDEP_IOCTL_DSP_LOAD(fd fd, cmd const[SNDRV_HWDEP_IOCTL_DSP_LOAD], arg ptr[in, SNDRV_HWDEP_IOCTL_DSP_LOAD])
ioctl$auto_SNDRV_HWDEP_IOCTL_DSP_STATUS(fd fd, cmd const[SNDRV_HWDEP_IOCTL_DSP_STATUS], arg ptr[in, SNDRV_HWDEP_IOCTL_DSP_STATUS])
ioctl$auto_SNDRV_HWDEP_IOCTL_INFO(fd fd, cmd const[SNDRV_HWDEP_IOCTL_INFO], arg ptr[in, SNDRV_HWDEP_IOCTL_INFO])
ioctl$auto_SNDRV_HWDEP_IOCTL_PVERSION(fd fd, cmd const[SNDRV_HWDEP_IOCTL_PVERSION], arg ptr[in, SNDRV_HWDEP_IOCTL_PVERSION])
ioctl$auto_SNDRV_PCM_IOCTL_CHANNEL_INFO32(fd fd, cmd const[SNDRV_PCM_IOCTL_CHANNEL_INFO32], arg ptr[in, SNDRV_PCM_IOCTL_CHANNEL_INFO32])
ioctl$auto_SNDRV_PCM_IOCTL_DELAY32(fd fd, cmd const[SNDRV_PCM_IOCTL_DELAY32], arg ptr[in, SNDRV_PCM_IOCTL_DELAY32])
ioctl$auto_SNDRV_PCM_IOCTL_DRAIN(fd fd, cmd const[SNDRV_PCM_IOCTL_DRAIN], arg ptr[in, SNDRV_PCM_IOCTL_DRAIN])
ioctl$auto_SNDRV_PCM_IOCTL_DROP(fd fd, cmd const[SNDRV_PCM_IOCTL_DROP], arg ptr[in, SNDRV_PCM_IOCTL_DROP])
ioctl$auto_SNDRV_PCM_IOCTL_FORWARD32(fd fd, cmd const[SNDRV_PCM_IOCTL_FORWARD32], arg ptr[in, SNDRV_PCM_IOCTL_FORWARD32])
ioctl$auto_SNDRV_PCM_IOCTL_HW_FREE(fd fd, cmd const[SNDRV_PCM_IOCTL_HW_FREE], arg ptr[in, SNDRV_PCM_IOCTL_HW_FREE])
ioctl$auto_SNDRV_PCM_IOCTL_HW_PARAMS32(fd fd, cmd const[SNDRV_PCM_IOCTL_HW_PARAMS32], arg ptr[in, SNDRV_PCM_IOCTL_HW_PARAMS32])
ioctl$auto_SNDRV_PCM_IOCTL_HW_REFINE32(fd fd, cmd const[SNDRV_PCM_IOCTL_HW_REFINE32], arg ptr[in, SNDRV_PCM_IOCTL_HW_REFINE32])
ioctl$auto_SNDRV_PCM_IOCTL_HWSYNC(fd fd, cmd const[SNDRV_PCM_IOCTL_HWSYNC], arg ptr[in, SNDRV_PCM_IOCTL_HWSYNC])
ioctl$auto_SNDRV_PCM_IOCTL_INFO(fd fd, cmd const[SNDRV_PCM_IOCTL_INFO], arg ptr[in, SNDRV_PCM_IOCTL_INFO])
ioctl$auto_SNDRV_PCM_IOCTL_LINK(fd fd, cmd const[SNDRV_PCM_IOCTL_LINK], arg ptr[in, SNDRV_PCM_IOCTL_LINK])
ioctl$auto_SNDRV_PCM_IOCTL_PAUSE(fd fd, cmd const[SNDRV_PCM_IOCTL_PAUSE], arg ptr[in, SNDRV_PCM_IOCTL_PAUSE])
ioctl$auto_SNDRV_PCM_IOCTL_PREPARE(fd fd, cmd const[SNDRV_PCM_IOCTL_PREPARE], arg ptr[in, SNDRV_PCM_IOCTL_PREPARE])
ioctl$auto_SNDRV_PCM_IOCTL_PVERSION(fd fd, cmd const[SNDRV_PCM_IOCTL_PVERSION], arg ptr[in, SNDRV_PCM_IOCTL_PVERSION])
ioctl$auto_SNDRV_PCM_IOCTL_READI_FRAMES32(fd fd, cmd const[SNDRV_PCM_IOCTL_READI_FRAMES32], arg ptr[in, SNDRV_PCM_IOCTL_READI_FRAMES32])
ioctl$auto_SNDRV_PCM_IOCTL_READN_FRAMES32(fd fd, cmd const[SNDRV_PCM_IOCTL_READN_FRAMES32], arg ptr[in, SNDRV_PCM_IOCTL_READN_FRAMES32])
ioctl$auto_SNDRV_PCM_IOCTL_RESET(fd fd, cmd const[SNDRV_PCM_IOCTL_RESET], arg ptr[in, SNDRV_PCM_IOCTL_RESET])
ioctl$auto_SNDRV_PCM_IOCTL_RESUME(fd fd, cmd const[SNDRV_PCM_IOCTL_RESUME], arg ptr[in, SNDRV_PCM_IOCTL_RESUME])
ioctl$auto_SNDRV_PCM_IOCTL_REWIND32(fd fd, cmd const[SNDRV_PCM_IOCTL_REWIND32], arg ptr[in, SNDRV_PCM_IOCTL_REWIND32])
ioctl$auto_SNDRV_PCM_IOCTL_START(fd fd, cmd const[SNDRV_PCM_IOCTL_START], arg ptr[in, SNDRV_PCM_IOCTL_START])
ioctl$auto_SNDRV_PCM_IOCTL_STATUS_COMPAT32(fd fd, cmd const[SNDRV_PCM_IOCTL_STATUS_COMPAT32], arg ptr[in, SNDRV_PCM_IOCTL_STATUS_COMPAT32])
ioctl$auto_SNDRV_PCM_IOCTL_STATUS_COMPAT64(fd fd, cmd const[SNDRV_PCM_IOCTL_STATUS_COMPAT64], arg ptr[in, SNDRV_PCM_IOCTL_STATUS_COMPAT64])
ioctl$auto_SNDRV_PCM_IOCTL_STATUS_EXT_COMPAT32(fd fd, cmd const[SNDRV_PCM_IOCTL_STATUS_EXT_COMPAT32], arg ptr[in, SNDRV_PCM_IOCTL_STATUS_EXT_COMPAT32])
ioctl$auto_SNDRV_PCM_IOCTL_STATUS_EXT_COMPAT64(fd fd, cmd const[SNDRV_PCM_IOCTL_STATUS_EXT_COMPAT64], arg ptr[in, SNDRV_PCM_IOCTL_STATUS_EXT_COMPAT64])
ioctl$auto_SNDRV_PCM_IOCTL_SW_PARAMS32(fd fd, cmd const[SNDRV_PCM_IOCTL_SW_PARAMS32], arg ptr[in, SNDRV_PCM_IOCTL_SW_PARAMS32])
ioctl$auto___SNDRV_PCM_IOCTL_SYNC_PTR32(fd fd, cmd const[__SNDRV_PCM_IOCTL_SYNC_PTR32], arg ptr[in, __SNDRV_PCM_IOCTL_SYNC_PTR32])
ioctl$auto___SNDRV_PCM_IOCTL_SYNC_PTR64(fd fd, cmd const[__SNDRV_PCM_IOCTL_SYNC_PTR64], arg ptr[in, __SNDRV_PCM_IOCTL_SYNC_PTR64])
ioctl$auto_SNDRV_PCM_IOCTL_TSTAMP(fd fd, cmd const[SNDRV_PCM_IOCTL_TSTAMP], arg ptr[in, SNDRV_PCM_IOCTL_TSTAMP])
ioctl$auto_SNDRV_PCM_IOCTL_TTSTAMP(fd fd, cmd const[SNDRV_PCM_IOCTL_TTSTAMP], arg ptr[in, SNDRV_PCM_IOCTL_TTSTAMP])
ioctl$auto_SNDRV_PCM_IOCTL_UNLINK(fd fd, cmd const[SNDRV_PCM_IOCTL_UNLINK], arg ptr[in, SNDRV_PCM_IOCTL_UNLINK])
ioctl$auto_SNDRV_PCM_IOCTL_USER_PVERSION(fd fd, cmd const[SNDRV_PCM_IOCTL_USER_PVERSION], arg ptr[in, SNDRV_PCM_IOCTL_USER_PVERSION])
ioctl$auto_SNDRV_PCM_IOCTL_WRITEI_FRAMES32(fd fd, cmd const[SNDRV_PCM_IOCTL_WRITEI_FRAMES32], arg ptr[in, SNDRV_PCM_IOCTL_WRITEI_FRAMES32])
ioctl$auto_SNDRV_PCM_IOCTL_WRITEN_FRAMES32(fd fd, cmd const[SNDRV_PCM_IOCTL_WRITEN_FRAMES32], arg ptr[in, SNDRV_PCM_IOCTL_WRITEN_FRAMES32])
ioctl$auto_SNDRV_PCM_IOCTL_XRUN(fd fd, cmd const[SNDRV_PCM_IOCTL_XRUN], arg ptr[in, SNDRV_PCM_IOCTL_XRUN])
ioctl$auto_SNDRV_PCM_MMAP_OFFSET_CONTROL_NEW(fd fd, cmd const[SNDRV_PCM_MMAP_OFFSET_CONTROL_NEW], arg ptr[in, SNDRV_PCM_MMAP_OFFSET_CONTROL_NEW])
ioctl$auto_SNDRV_PCM_MMAP_OFFSET_CONTROL_OLD(fd fd, cmd const[SNDRV_PCM_MMAP_OFFSET_CONTROL_OLD], arg ptr[in, SNDRV_PCM_MMAP_OFFSET_CONTROL_OLD])
ioctl$auto_SNDRV_PCM_MMAP_OFFSET_STATUS_NEW(fd fd, cmd const[SNDRV_PCM_MMAP_OFFSET_STATUS_NEW], arg ptr[in, SNDRV_PCM_MMAP_OFFSET_STATUS_NEW])
ioctl$auto_SNDRV_PCM_MMAP_OFFSET_STATUS_OLD(fd fd, cmd const[SNDRV_PCM_MMAP_OFFSET_STATUS_OLD], arg ptr[in, SNDRV_PCM_MMAP_OFFSET_STATUS_OLD])
ioctl$auto_SNDRV_PCM_STATE_DRAINING(fd fd, cmd const[SNDRV_PCM_STATE_DRAINING], arg ptr[in, SNDRV_PCM_STATE_DRAINING])
ioctl$auto_SNDRV_PCM_STATE_PAUSED(fd fd, cmd const[SNDRV_PCM_STATE_PAUSED], arg ptr[in, SNDRV_PCM_STATE_PAUSED])
ioctl$auto_SNDRV_PCM_STATE_PREPARED(fd fd, cmd const[SNDRV_PCM_STATE_PREPARED], arg ptr[in, SNDRV_PCM_STATE_PREPARED])
ioctl$auto_SNDRV_PCM_STATE_RUNNING(fd fd, cmd const[SNDRV_PCM_STATE_RUNNING], arg ptr[in, SNDRV_PCM_STATE_RUNNING])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_DRAIN(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_DRAIN], arg ptr[in, SNDRV_RAWMIDI_IOCTL_DRAIN])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_DROP(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_DROP], arg ptr[in, SNDRV_RAWMIDI_IOCTL_DROP])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_INFO(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_INFO], arg ptr[in, SNDRV_RAWMIDI_IOCTL_INFO])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_PARAMS32(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_PARAMS32], arg ptr[in, SNDRV_RAWMIDI_IOCTL_PARAMS32])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_PARAMS(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_PARAMS], arg ptr[in, SNDRV_RAWMIDI_IOCTL_PARAMS])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_PVERSION(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_PVERSION], arg ptr[in, SNDRV_RAWMIDI_IOCTL_PVERSION])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_STATUS32(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_STATUS32], arg ptr[in, SNDRV_RAWMIDI_IOCTL_STATUS32])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_STATUS64(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_STATUS64], arg ptr[in, SNDRV_RAWMIDI_IOCTL_STATUS64])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_STATUS_COMPAT32(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_STATUS_COMPAT32], arg ptr[in, SNDRV_RAWMIDI_IOCTL_STATUS_COMPAT32])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_STATUS_COMPAT64(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_STATUS_COMPAT64], arg ptr[in, SNDRV_RAWMIDI_IOCTL_STATUS_COMPAT64])
ioctl$auto_SNDRV_RAWMIDI_IOCTL_USER_PVERSION(fd fd, cmd const[SNDRV_RAWMIDI_IOCTL_USER_PVERSION], arg ptr[in, SNDRV_RAWMIDI_IOCTL_USER_PVERSION])
ioctl$auto_SNDRV_RAWMIDI_STREAM_INPUT(fd fd, cmd const[SNDRV_RAWMIDI_STREAM_INPUT], arg ptr[in, SNDRV_RAWMIDI_STREAM_INPUT])
ioctl$auto_SNDRV_RAWMIDI_STREAM_OUTPUT(fd fd, cmd const[SNDRV_RAWMIDI_STREAM_OUTPUT], arg ptr[in, SNDRV_RAWMIDI_STREAM_OUTPUT])
ioctl$auto_SNDRV_SEQ_IOCTL_CLIENT_ID(fd fd, cmd const[SNDRV_SEQ_IOCTL_CLIENT_ID], arg ptr[in, SNDRV_SEQ_IOCTL_CLIENT_ID])
ioctl$auto_SNDRV_SEQ_IOCTL_CREATE_PORT32(fd fd, cmd const[SNDRV_SEQ_IOCTL_CREATE_PORT32], arg ptr[in, SNDRV_SEQ_IOCTL_CREATE_PORT32])
ioctl$auto_SNDRV_SEQ_IOCTL_CREATE_QUEUE(fd fd, cmd const[SNDRV_SEQ_IOCTL_CREATE_QUEUE], arg ptr[in, SNDRV_SEQ_IOCTL_CREATE_QUEUE])
ioctl$auto_SNDRV_SEQ_IOCTL_DELETE_PORT32(fd fd, cmd const[SNDRV_SEQ_IOCTL_DELETE_PORT32], arg ptr[in, SNDRV_SEQ_IOCTL_DELETE_PORT32])
ioctl$auto_SNDRV_SEQ_IOCTL_DELETE_QUEUE(fd fd, cmd const[SNDRV_SEQ_IOCTL_DELETE_QUEUE], arg ptr[in, SNDRV_SEQ_IOCTL_DELETE_QUEUE])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_CLIENT_INFO(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_CLIENT_INFO], arg ptr[in, SNDRV_SEQ_IOCTL_GET_CLIENT_INFO])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_CLIENT_POOL(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_CLIENT_POOL], arg ptr[in, SNDRV_SEQ_IOCTL_GET_CLIENT_POOL])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_CLIENT_UMP_INFO(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_CLIENT_UMP_INFO], arg ptr[in, SNDRV_SEQ_IOCTL_GET_CLIENT_UMP_INFO])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE], arg ptr[in, SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_PORT_INFO32(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_PORT_INFO32], arg ptr[in, SNDRV_SEQ_IOCTL_GET_PORT_INFO32])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT], arg ptr[in, SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_QUEUE_INFO(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_QUEUE_INFO], arg ptr[in, SNDRV_SEQ_IOCTL_GET_QUEUE_INFO])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS], arg ptr[in, SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO], arg ptr[in, SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER], arg ptr[in, SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER])
ioctl$auto_SNDRV_SEQ_IOCTL_GET_SUBSCRIPTION(fd fd, cmd const[SNDRV_SEQ_IOCTL_GET_SUBSCRIPTION], arg ptr[in, SNDRV_SEQ_IOCTL_GET_SUBSCRIPTION])
ioctl$auto_SNDRV_SEQ_IOCTL_PVERSION(fd fd, cmd const[SNDRV_SEQ_IOCTL_PVERSION], arg ptr[in, SNDRV_SEQ_IOCTL_PVERSION])
ioctl$auto_SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT(fd fd, cmd const[SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT], arg ptr[in, SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT])
ioctl$auto_SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT32(fd fd, cmd const[SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT32], arg ptr[in, SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT32])
ioctl$auto_SNDRV_SEQ_IOCTL_QUERY_SUBS(fd fd, cmd const[SNDRV_SEQ_IOCTL_QUERY_SUBS], arg ptr[in, SNDRV_SEQ_IOCTL_QUERY_SUBS])
ioctl$auto_SNDRV_SEQ_IOCTL_REMOVE_EVENTS(fd fd, cmd const[SNDRV_SEQ_IOCTL_REMOVE_EVENTS], arg ptr[in, SNDRV_SEQ_IOCTL_REMOVE_EVENTS])
ioctl$auto_SNDRV_SEQ_IOCTL_RUNNING_MODE(fd fd, cmd const[SNDRV_SEQ_IOCTL_RUNNING_MODE], arg ptr[in, SNDRV_SEQ_IOCTL_RUNNING_MODE])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_CLIENT_INFO(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_CLIENT_INFO], arg ptr[in, SNDRV_SEQ_IOCTL_SET_CLIENT_INFO])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_CLIENT_POOL(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_CLIENT_POOL], arg ptr[in, SNDRV_SEQ_IOCTL_SET_CLIENT_POOL])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_CLIENT_UMP_INFO(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_CLIENT_UMP_INFO], arg ptr[in, SNDRV_SEQ_IOCTL_SET_CLIENT_UMP_INFO])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_PORT_INFO32(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_PORT_INFO32], arg ptr[in, SNDRV_SEQ_IOCTL_SET_PORT_INFO32])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT], arg ptr[in, SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_QUEUE_INFO(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_QUEUE_INFO], arg ptr[in, SNDRV_SEQ_IOCTL_SET_QUEUE_INFO])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO], arg ptr[in, SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO])
ioctl$auto_SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER(fd fd, cmd const[SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER], arg ptr[in, SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER])
ioctl$auto_SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT(fd fd, cmd const[SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT], arg ptr[in, SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT])
ioctl$auto_SNDRV_SEQ_IOCTL_SYSTEM_INFO(fd fd, cmd const[SNDRV_SEQ_IOCTL_SYSTEM_INFO], arg ptr[in, SNDRV_SEQ_IOCTL_SYSTEM_INFO])
ioctl$auto_SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT(fd fd, cmd const[SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT], arg ptr[in, SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT])
ioctl$auto_SNDRV_SEQ_IOCTL_USER_PVERSION(fd fd, cmd const[SNDRV_SEQ_IOCTL_USER_PVERSION], arg ptr[in, SNDRV_SEQ_IOCTL_USER_PVERSION])
ioctl$auto_SNDRV_UMP_IOCTL_BLOCK_INFO(fd fd, cmd const[SNDRV_UMP_IOCTL_BLOCK_INFO], arg ptr[in, SNDRV_UMP_IOCTL_BLOCK_INFO])
ioctl$auto_SNDRV_UMP_IOCTL_ENDPOINT_INFO(fd fd, cmd const[SNDRV_UMP_IOCTL_ENDPOINT_INFO], arg ptr[in, SNDRV_UMP_IOCTL_ENDPOINT_INFO])
ioctl$auto_SND_SOC_BIAS_OFF(fd fd, cmd const[SND_SOC_BIAS_OFF], arg ptr[in, SND_SOC_BIAS_OFF])
ioctl$auto_SND_SOC_BIAS_ON(fd fd, cmd const[SND_SOC_BIAS_ON], arg ptr[in, SND_SOC_BIAS_ON])
ioctl$auto_SND_SOC_BIAS_PREPARE(fd fd, cmd const[SND_SOC_BIAS_PREPARE], arg ptr[in, SND_SOC_BIAS_PREPARE])
ioctl$auto_SND_SOC_BIAS_STANDBY(fd fd, cmd const[SND_SOC_BIAS_STANDBY], arg ptr[in, SND_SOC_BIAS_STANDBY])
ioctl$auto_SOUND_PCM_READ_BITS(fd fd, cmd const[SOUND_PCM_READ_BITS], arg ptr[in, SOUND_PCM_READ_BITS])
ioctl$auto_SOUND_PCM_READ_CHANNELS(fd fd, cmd const[SOUND_PCM_READ_CHANNELS], arg ptr[in, SOUND_PCM_READ_CHANNELS])
ioctl$auto_SOUND_PCM_READ_FILTER(fd fd, cmd const[SOUND_PCM_READ_FILTER], arg ptr[in, SOUND_PCM_READ_FILTER])
ioctl$auto_SOUND_PCM_READ_RATE(fd fd, cmd const[SOUND_PCM_READ_RATE], arg ptr[in, SOUND_PCM_READ_RATE])
ioctl$auto_SOUND_PCM_WRITE_FILTER(fd fd, cmd const[SOUND_PCM_WRITE_FILTER], arg ptr[in, SOUND_PCM_WRITE_FILTER])
ioctl$auto_SPECTRAL_BACKGROUND(fd fd, cmd const[SPECTRAL_BACKGROUND], arg ptr[in, SPECTRAL_BACKGROUND])
ioctl$auto_SPECTRAL_CHANSCAN(fd fd, cmd const[SPECTRAL_CHANSCAN], arg ptr[in, SPECTRAL_CHANSCAN])
ioctl$auto_SPECTRAL_DISABLED(fd fd, cmd const[SPECTRAL_DISABLED], arg ptr[in, SPECTRAL_DISABLED])
ioctl$auto_SPECTRAL_MANUAL(fd fd, cmd const[SPECTRAL_MANUAL], arg ptr[in, SPECTRAL_MANUAL])
ioctl$auto_STATE_DEV_CONNECTED(fd fd, cmd const[STATE_DEV_CONNECTED], arg ptr[in, STATE_DEV_CONNECTED])
ioctl$auto_STATE_DEV_UNCONNECTED(fd fd, cmd const[STATE_DEV_UNCONNECTED], arg ptr[in, STATE_DEV_UNCONNECTED])
ioctl$auto_SW_SYNC_GET_DEADLINE(fd fd, cmd const[SW_SYNC_GET_DEADLINE], arg ptr[in, SW_SYNC_GET_DEADLINE])
ioctl$auto_SW_SYNC_IOC_CREATE_FENCE(fd fd, cmd const[SW_SYNC_IOC_CREATE_FENCE], arg ptr[in, SW_SYNC_IOC_CREATE_FENCE])
ioctl$auto_SW_SYNC_IOC_INC(fd fd, cmd const[SW_SYNC_IOC_INC], arg ptr[in, SW_SYNC_IOC_INC])
ioctl$auto_SYNC_IOC_FILE_INFO(fd fd, cmd const[SYNC_IOC_FILE_INFO], arg ptr[in, SYNC_IOC_FILE_INFO])
ioctl$auto_SYNC_IOC_MERGE(fd fd, cmd const[SYNC_IOC_MERGE], arg ptr[in, SYNC_IOC_MERGE])
ioctl$auto_SYNC_IOC_SET_DEADLINE(fd fd, cmd const[SYNC_IOC_SET_DEADLINE], arg ptr[in, SYNC_IOC_SET_DEADLINE])
ioctl$auto_TEE_IOC_CANCEL(fd fd, cmd const[TEE_IOC_CANCEL], arg ptr[in, TEE_IOC_CANCEL])
ioctl$auto_TEE_IOC_CLOSE_SESSION(fd fd, cmd const[TEE_IOC_CLOSE_SESSION], arg ptr[in, TEE_IOC_CLOSE_SESSION])
ioctl$auto_TEE_IOC_INVOKE(fd fd, cmd const[TEE_IOC_INVOKE], arg ptr[in, TEE_IOC_INVOKE])
ioctl$auto_TEE_IOC_OPEN_SESSION(fd fd, cmd const[TEE_IOC_OPEN_SESSION], arg ptr[in, TEE_IOC_OPEN_SESSION])
ioctl$auto_TEE_IOC_SHM_ALLOC(fd fd, cmd const[TEE_IOC_SHM_ALLOC], arg ptr[in, TEE_IOC_SHM_ALLOC])
ioctl$auto_TEE_IOC_SHM_REGISTER(fd fd, cmd const[TEE_IOC_SHM_REGISTER], arg ptr[in, TEE_IOC_SHM_REGISTER])
ioctl$auto_TEE_IOC_SUPPL_RECV(fd fd, cmd const[TEE_IOC_SUPPL_RECV], arg ptr[in, TEE_IOC_SUPPL_RECV])
ioctl$auto_TEE_IOC_SUPPL_SEND(fd fd, cmd const[TEE_IOC_SUPPL_SEND], arg ptr[in, TEE_IOC_SUPPL_SEND])
ioctl$auto_TEE_IOC_VERSION(fd fd, cmd const[TEE_IOC_VERSION], arg ptr[in, TEE_IOC_VERSION])
ioctl$auto_TFD_IOC_SET_TICKS(fd fd, cmd const[TFD_IOC_SET_TICKS], arg ptr[in, TFD_IOC_SET_TICKS])
ioctl$auto_TIOCINQ(fd fd, cmd const[TIOCINQ], arg ptr[in, TIOCINQ])
ioctl$auto_TREAD_FORMAT_NONE(fd fd, cmd const[TREAD_FORMAT_NONE], arg ptr[in, TREAD_FORMAT_NONE])
ioctl$auto_TREAD_FORMAT_TIME32(fd fd, cmd const[TREAD_FORMAT_TIME32], arg ptr[in, TREAD_FORMAT_TIME32])
ioctl$auto_TREAD_FORMAT_TIME64(fd fd, cmd const[TREAD_FORMAT_TIME64], arg ptr[in, TREAD_FORMAT_TIME64])
ioctl$auto_TUNGETFEATURES(fd fd, cmd const[TUNGETFEATURES], arg ptr[in, TUNGETFEATURES])
ioctl$auto_TUNGETIFF(fd fd, cmd const[TUNGETIFF], arg ptr[in, TUNGETIFF])
ioctl$auto_TUNGETSNDBUF(fd fd, cmd const[TUNGETSNDBUF], arg ptr[in, TUNGETSNDBUF])
ioctl$auto_TUNGETVNETBE(fd fd, cmd const[TUNGETVNETBE], arg ptr[in, TUNGETVNETBE])
ioctl$auto_TUNGETVNETHDRSZ(fd fd, cmd const[TUNGETVNETHDRSZ], arg ptr[in, TUNGETVNETHDRSZ])
ioctl$auto_TUNGETVNETLE(fd fd, cmd const[TUNGETVNETLE], arg ptr[in, TUNGETVNETLE])
ioctl$auto_TUNSETIFF(fd fd, cmd const[TUNSETIFF], arg ptr[in, TUNSETIFF])
ioctl$auto_TUNSETOFFLOAD(fd fd, cmd const[TUNSETOFFLOAD], arg ptr[in, TUNSETOFFLOAD])
ioctl$auto_TUNSETQUEUE(fd fd, cmd const[TUNSETQUEUE], arg ptr[in, TUNSETQUEUE])
ioctl$auto_TUNSETSNDBUF(fd fd, cmd const[TUNSETSNDBUF], arg ptr[in, TUNSETSNDBUF])
ioctl$auto_TUNSETTXFILTER(fd fd, cmd const[TUNSETTXFILTER], arg ptr[in, TUNSETTXFILTER])
ioctl$auto_TUNSETVNETBE(fd fd, cmd const[TUNSETVNETBE], arg ptr[in, TUNSETVNETBE])
ioctl$auto_TUNSETVNETHDRSZ(fd fd, cmd const[TUNSETVNETHDRSZ], arg ptr[in, TUNSETVNETHDRSZ])
ioctl$auto_TUNSETVNETLE(fd fd, cmd const[TUNSETVNETLE], arg ptr[in, TUNSETVNETLE])
ioctl$auto_UBI_IOCATT(fd fd, cmd const[UBI_IOCATT], arg ptr[in, UBI_IOCATT])
ioctl$auto_UBI_IOCDET(fd fd, cmd const[UBI_IOCDET], arg ptr[in, UBI_IOCDET])
ioctl$auto_UBI_IOCEBCH(fd fd, cmd const[UBI_IOCEBCH], arg ptr[in, UBI_IOCEBCH])
ioctl$auto_UBI_IOCEBER(fd fd, cmd const[UBI_IOCEBER], arg ptr[in, UBI_IOCEBER])
ioctl$auto_UBI_IOCEBISMAP(fd fd, cmd const[UBI_IOCEBISMAP], arg ptr[in, UBI_IOCEBISMAP])
ioctl$auto_UBI_IOCEBMAP(fd fd, cmd const[UBI_IOCEBMAP], arg ptr[in, UBI_IOCEBMAP])
ioctl$auto_UBI_IOCEBUNMAP(fd fd, cmd const[UBI_IOCEBUNMAP], arg ptr[in, UBI_IOCEBUNMAP])
ioctl$auto_UBI_IOCMKVOL(fd fd, cmd const[UBI_IOCMKVOL], arg ptr[in, UBI_IOCMKVOL])
ioctl$auto_UBI_IOCRMVOL(fd fd, cmd const[UBI_IOCRMVOL], arg ptr[in, UBI_IOCRMVOL])
ioctl$auto_UBI_IOCRNVOL(fd fd, cmd const[UBI_IOCRNVOL], arg ptr[in, UBI_IOCRNVOL])
ioctl$auto_UBI_IOCRPEB(fd fd, cmd const[UBI_IOCRPEB], arg ptr[in, UBI_IOCRPEB])
ioctl$auto_UBI_IOCRSVOL(fd fd, cmd const[UBI_IOCRSVOL], arg ptr[in, UBI_IOCRSVOL])
ioctl$auto_UBI_IOCSETVOLPROP(fd fd, cmd const[UBI_IOCSETVOLPROP], arg ptr[in, UBI_IOCSETVOLPROP])
ioctl$auto_UBI_IOCSPEB(fd fd, cmd const[UBI_IOCSPEB], arg ptr[in, UBI_IOCSPEB])
ioctl$auto_UBI_IOCVOLCRBLK(fd fd, cmd const[UBI_IOCVOLCRBLK], arg ptr[in, UBI_IOCVOLCRBLK])
ioctl$auto_UBI_IOCVOLRMBLK(fd fd, cmd const[UBI_IOCVOLRMBLK], arg ptr[in, UBI_IOCVOLRMBLK])
ioctl$auto_UBI_IOCVOLUP(fd fd, cmd const[UBI_IOCVOLUP], arg ptr[in, UBI_IOCVOLUP])
ioctl$auto_UBI_VOL_PROP_DIRECT_WRITE(fd fd, cmd const[UBI_VOL_PROP_DIRECT_WRITE], arg ptr[in, UBI_VOL_PROP_DIRECT_WRITE])
ioctl$auto_UDF_GETEABLOCK(fd fd, cmd const[UDF_GETEABLOCK], arg ptr[in, UDF_GETEABLOCK])
ioctl$auto_UDF_GETEASIZE(fd fd, cmd const[UDF_GETEASIZE], arg ptr[in, UDF_GETEASIZE])
ioctl$auto_UDF_GETVOLIDENT(fd fd, cmd const[UDF_GETVOLIDENT], arg ptr[in, UDF_GETVOLIDENT])
ioctl$auto_UDF_RELOCATE_BLOCKS(fd fd, cmd const[UDF_RELOCATE_BLOCKS], arg ptr[in, UDF_RELOCATE_BLOCKS])
ioctl$auto_UDMABUF_CREATE(fd fd, cmd const[UDMABUF_CREATE], arg ptr[in, UDMABUF_CREATE])
ioctl$auto_UDMABUF_CREATE_LIST(fd fd, cmd const[UDMABUF_CREATE_LIST], arg ptr[in, UDMABUF_CREATE_LIST])
ioctl$auto_UFFDIO_API(fd fd, cmd const[UFFDIO_API], arg ptr[in, UFFDIO_API])
ioctl$auto_UFFDIO_CONTINUE(fd fd, cmd const[UFFDIO_CONTINUE], arg ptr[in, UFFDIO_CONTINUE])
ioctl$auto_UFFDIO_COPY(fd fd, cmd const[UFFDIO_COPY], arg ptr[in, UFFDIO_COPY])
ioctl$auto_UFFDIO_MOVE(fd fd, cmd const[UFFDIO_MOVE], arg ptr[in, UFFDIO_MOVE])
ioctl$auto_UFFDIO_POISON(fd fd, cmd const[UFFDIO_POISON], arg ptr[in, UFFDIO_POISON])
ioctl$auto_UFFDIO_REGISTER(fd fd, cmd const[UFFDIO_REGISTER], arg ptr[in, UFFDIO_REGISTER])
ioctl$auto_UFFDIO_UNREGISTER(fd fd, cmd const[UFFDIO_UNREGISTER], arg ptr[in, UFFDIO_UNREGISTER])
ioctl$auto_UFFDIO_WAKE(fd fd, cmd const[UFFDIO_WAKE], arg ptr[in, UFFDIO_WAKE])
ioctl$auto_UFFDIO_WRITEPROTECT(fd fd, cmd const[UFFDIO_WRITEPROTECT], arg ptr[in, UFFDIO_WRITEPROTECT])
ioctl$auto_UFFDIO_ZEROPAGE(fd fd, cmd const[UFFDIO_ZEROPAGE], arg ptr[in, UFFDIO_ZEROPAGE])
ioctl$auto_UHID_CREATE2(fd fd, cmd const[UHID_CREATE2], arg ptr[in, UHID_CREATE2])
ioctl$auto_UHID_CREATE(fd fd, cmd const[UHID_CREATE], arg ptr[in, UHID_CREATE])
ioctl$auto_UHID_DESTROY(fd fd, cmd const[UHID_DESTROY], arg ptr[in, UHID_DESTROY])
ioctl$auto_UHID_GET_REPORT_REPLY(fd fd, cmd const[UHID_GET_REPORT_REPLY], arg ptr[in, UHID_GET_REPORT_REPLY])
ioctl$auto_UHID_INPUT2(fd fd, cmd const[UHID_INPUT2], arg ptr[in, UHID_INPUT2])
ioctl$auto_UHID_INPUT(fd fd, cmd const[UHID_INPUT], arg ptr[in, UHID_INPUT])
ioctl$auto_UHID_SET_REPORT_REPLY(fd fd, cmd const[UHID_SET_REPORT_REPLY], arg ptr[in, UHID_SET_REPORT_REPLY])
ioctl$auto_UI_BEGIN_FF_UPLOAD_COMPAT(fd fd, cmd const[UI_BEGIN_FF_UPLOAD_COMPAT], arg ptr[in, UI_BEGIN_FF_UPLOAD_COMPAT])
ioctl$auto_UI_END_FF_UPLOAD_COMPAT(fd fd, cmd const[UI_END_FF_UPLOAD_COMPAT], arg ptr[in, UI_END_FF_UPLOAD_COMPAT])
ioctl$auto_UI_SET_PHYS_COMPAT(fd fd, cmd const[UI_SET_PHYS_COMPAT], arg ptr[in, UI_SET_PHYS_COMPAT])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW100(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW100], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW100])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW24(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW24], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW24])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW24SAG(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW24SAG], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW24SAG])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW28(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW28], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW28])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW28L(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW28L], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW28L])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW40(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW40], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW40])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW56AM(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW56AM], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW56AM])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOW56(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOW56], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOW56])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOWPV1(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOWPV1], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOWPV1])
ioctl$auto_USB_DEVICE_ID_CODEMERCS_IOWPV2(fd fd, cmd const[USB_DEVICE_ID_CODEMERCS_IOWPV2], arg ptr[in, USB_DEVICE_ID_CODEMERCS_IOWPV2])
ioctl$auto_USB_RAW_IOCTL_CONFIGURE(fd fd, cmd const[USB_RAW_IOCTL_CONFIGURE], arg ptr[in, USB_RAW_IOCTL_CONFIGURE])
ioctl$auto_USB_RAW_IOCTL_EP0_READ(fd fd, cmd const[USB_RAW_IOCTL_EP0_READ], arg ptr[in, USB_RAW_IOCTL_EP0_READ])
ioctl$auto_USB_RAW_IOCTL_EP0_STALL(fd fd, cmd const[USB_RAW_IOCTL_EP0_STALL], arg ptr[in, USB_RAW_IOCTL_EP0_STALL])
ioctl$auto_USB_RAW_IOCTL_EP0_WRITE(fd fd, cmd const[USB_RAW_IOCTL_EP0_WRITE], arg ptr[in, USB_RAW_IOCTL_EP0_WRITE])
ioctl$auto_USB_RAW_IOCTL_EP_CLEAR_HALT(fd fd, cmd const[USB_RAW_IOCTL_EP_CLEAR_HALT], arg ptr[in, USB_RAW_IOCTL_EP_CLEAR_HALT])
ioctl$auto_USB_RAW_IOCTL_EP_DISABLE(fd fd, cmd const[USB_RAW_IOCTL_EP_DISABLE], arg ptr[in, USB_RAW_IOCTL_EP_DISABLE])
ioctl$auto_USB_RAW_IOCTL_EP_ENABLE(fd fd, cmd const[USB_RAW_IOCTL_EP_ENABLE], arg ptr[in, USB_RAW_IOCTL_EP_ENABLE])
ioctl$auto_USB_RAW_IOCTL_EP_READ(fd fd, cmd const[USB_RAW_IOCTL_EP_READ], arg ptr[in, USB_RAW_IOCTL_EP_READ])
ioctl$auto_USB_RAW_IOCTL_EP_SET_HALT(fd fd, cmd const[USB_RAW_IOCTL_EP_SET_HALT], arg ptr[in, USB_RAW_IOCTL_EP_SET_HALT])
ioctl$auto_USB_RAW_IOCTL_EP_SET_WEDGE(fd fd, cmd const[USB_RAW_IOCTL_EP_SET_WEDGE], arg ptr[in, USB_RAW_IOCTL_EP_SET_WEDGE])
ioctl$auto_USB_RAW_IOCTL_EPS_INFO(fd fd, cmd const[USB_RAW_IOCTL_EPS_INFO], arg ptr[in, USB_RAW_IOCTL_EPS_INFO])
ioctl$auto_USB_RAW_IOCTL_EP_WRITE(fd fd, cmd const[USB_RAW_IOCTL_EP_WRITE], arg ptr[in, USB_RAW_IOCTL_EP_WRITE])
ioctl$auto_USB_RAW_IOCTL_EVENT_FETCH(fd fd, cmd const[USB_RAW_IOCTL_EVENT_FETCH], arg ptr[in, USB_RAW_IOCTL_EVENT_FETCH])
ioctl$auto_USB_RAW_IOCTL_INIT(fd fd, cmd const[USB_RAW_IOCTL_INIT], arg ptr[in, USB_RAW_IOCTL_INIT])
ioctl$auto_USB_RAW_IOCTL_RUN(fd fd, cmd const[USB_RAW_IOCTL_RUN], arg ptr[in, USB_RAW_IOCTL_RUN])
ioctl$auto_USB_RAW_IOCTL_VBUS_DRAW(fd fd, cmd const[USB_RAW_IOCTL_VBUS_DRAW], arg ptr[in, USB_RAW_IOCTL_VBUS_DRAW])
ioctl$auto_USB_SPEED_HIGH(fd fd, cmd const[USB_SPEED_HIGH], arg ptr[in, USB_SPEED_HIGH])
ioctl$auto_USB_SPEED_SUPER(fd fd, cmd const[USB_SPEED_SUPER], arg ptr[in, USB_SPEED_SUPER])
ioctl$auto_USB_SPEED_SUPER_PLUS(fd fd, cmd const[USB_SPEED_SUPER_PLUS], arg ptr[in, USB_SPEED_SUPER_PLUS])
ioctl$auto_USBTMC488_IOCTL_GET_CAPS(fd fd, cmd const[USBTMC488_IOCTL_GET_CAPS], arg ptr[in, USBTMC488_IOCTL_GET_CAPS])
ioctl$auto_USBTMC488_IOCTL_GOTO_LOCAL(fd fd, cmd const[USBTMC488_IOCTL_GOTO_LOCAL], arg ptr[in, USBTMC488_IOCTL_GOTO_LOCAL])
ioctl$auto_USBTMC488_IOCTL_LOCAL_LOCKOUT(fd fd, cmd const[USBTMC488_IOCTL_LOCAL_LOCKOUT], arg ptr[in, USBTMC488_IOCTL_LOCAL_LOCKOUT])
ioctl$auto_USBTMC488_IOCTL_READ_STB(fd fd, cmd const[USBTMC488_IOCTL_READ_STB], arg ptr[in, USBTMC488_IOCTL_READ_STB])
ioctl$auto_USBTMC488_IOCTL_REN_CONTROL(fd fd, cmd const[USBTMC488_IOCTL_REN_CONTROL], arg ptr[in, USBTMC488_IOCTL_REN_CONTROL])
ioctl$auto_USBTMC488_IOCTL_TRIGGER(fd fd, cmd const[USBTMC488_IOCTL_TRIGGER], arg ptr[in, USBTMC488_IOCTL_TRIGGER])
ioctl$auto_USBTMC488_IOCTL_WAIT_SRQ(fd fd, cmd const[USBTMC488_IOCTL_WAIT_SRQ], arg ptr[in, USBTMC488_IOCTL_WAIT_SRQ])
ioctl$auto_USBTMC_IOCTL_ABORT_BULK_IN(fd fd, cmd const[USBTMC_IOCTL_ABORT_BULK_IN], arg ptr[in, USBTMC_IOCTL_ABORT_BULK_IN])
ioctl$auto_USBTMC_IOCTL_ABORT_BULK_OUT(fd fd, cmd const[USBTMC_IOCTL_ABORT_BULK_OUT], arg ptr[in, USBTMC_IOCTL_ABORT_BULK_OUT])
ioctl$auto_USBTMC_IOCTL_API_VERSION(fd fd, cmd const[USBTMC_IOCTL_API_VERSION], arg ptr[in, USBTMC_IOCTL_API_VERSION])
ioctl$auto_USBTMC_IOCTL_AUTO_ABORT(fd fd, cmd const[USBTMC_IOCTL_AUTO_ABORT], arg ptr[in, USBTMC_IOCTL_AUTO_ABORT])
ioctl$auto_USBTMC_IOCTL_CANCEL_IO(fd fd, cmd const[USBTMC_IOCTL_CANCEL_IO], arg ptr[in, USBTMC_IOCTL_CANCEL_IO])
ioctl$auto_USBTMC_IOCTL_CLEANUP_IO(fd fd, cmd const[USBTMC_IOCTL_CLEANUP_IO], arg ptr[in, USBTMC_IOCTL_CLEANUP_IO])
ioctl$auto_USBTMC_IOCTL_CLEAR(fd fd, cmd const[USBTMC_IOCTL_CLEAR], arg ptr[in, USBTMC_IOCTL_CLEAR])
ioctl$auto_USBTMC_IOCTL_CLEAR_IN_HALT(fd fd, cmd const[USBTMC_IOCTL_CLEAR_IN_HALT], arg ptr[in, USBTMC_IOCTL_CLEAR_IN_HALT])
ioctl$auto_USBTMC_IOCTL_CLEAR_OUT_HALT(fd fd, cmd const[USBTMC_IOCTL_CLEAR_OUT_HALT], arg ptr[in, USBTMC_IOCTL_CLEAR_OUT_HALT])
ioctl$auto_USBTMC_IOCTL_CONFIG_TERMCHAR(fd fd, cmd const[USBTMC_IOCTL_CONFIG_TERMCHAR], arg ptr[in, USBTMC_IOCTL_CONFIG_TERMCHAR])
ioctl$auto_USBTMC_IOCTL_CTRL_REQUEST(fd fd, cmd const[USBTMC_IOCTL_CTRL_REQUEST], arg ptr[in, USBTMC_IOCTL_CTRL_REQUEST])
ioctl$auto_USBTMC_IOCTL_EOM_ENABLE(fd fd, cmd const[USBTMC_IOCTL_EOM_ENABLE], arg ptr[in, USBTMC_IOCTL_EOM_ENABLE])
ioctl$auto_USBTMC_IOCTL_GET_SRQ_STB(fd fd, cmd const[USBTMC_IOCTL_GET_SRQ_STB], arg ptr[in, USBTMC_IOCTL_GET_SRQ_STB])
ioctl$auto_USBTMC_IOCTL_GET_STB(fd fd, cmd const[USBTMC_IOCTL_GET_STB], arg ptr[in, USBTMC_IOCTL_GET_STB])
ioctl$auto_USBTMC_IOCTL_GET_TIMEOUT(fd fd, cmd const[USBTMC_IOCTL_GET_TIMEOUT], arg ptr[in, USBTMC_IOCTL_GET_TIMEOUT])
ioctl$auto_USBTMC_IOCTL_INDICATOR_PULSE(fd fd, cmd const[USBTMC_IOCTL_INDICATOR_PULSE], arg ptr[in, USBTMC_IOCTL_INDICATOR_PULSE])
ioctl$auto_USBTMC_IOCTL_MSG_IN_ATTR(fd fd, cmd const[USBTMC_IOCTL_MSG_IN_ATTR], arg ptr[in, USBTMC_IOCTL_MSG_IN_ATTR])
ioctl$auto_USBTMC_IOCTL_READ(fd fd, cmd const[USBTMC_IOCTL_READ], arg ptr[in, USBTMC_IOCTL_READ])
ioctl$auto_USBTMC_IOCTL_SET_TIMEOUT(fd fd, cmd const[USBTMC_IOCTL_SET_TIMEOUT], arg ptr[in, USBTMC_IOCTL_SET_TIMEOUT])
ioctl$auto_USBTMC_IOCTL_WRITE(fd fd, cmd const[USBTMC_IOCTL_WRITE], arg ptr[in, USBTMC_IOCTL_WRITE])
ioctl$auto_USBTMC_IOCTL_WRITE_RESULT(fd fd, cmd const[USBTMC_IOCTL_WRITE_RESULT], arg ptr[in, USBTMC_IOCTL_WRITE_RESULT])
ioctl$auto_USERIO_CMD_REGISTER(fd fd, cmd const[USERIO_CMD_REGISTER], arg ptr[in, USERIO_CMD_REGISTER])
ioctl$auto_USERIO_CMD_SEND_INTERRUPT(fd fd, cmd const[USERIO_CMD_SEND_INTERRUPT], arg ptr[in, USERIO_CMD_SEND_INTERRUPT])
ioctl$auto_USERIO_CMD_SET_PORT_TYPE(fd fd, cmd const[USERIO_CMD_SET_PORT_TYPE], arg ptr[in, USERIO_CMD_SET_PORT_TYPE])
ioctl$auto_VDUSE_CREATE_DEV(fd fd, cmd const[VDUSE_CREATE_DEV], arg ptr[in, VDUSE_CREATE_DEV])
ioctl$auto_VDUSE_DESTROY_DEV(fd fd, cmd const[VDUSE_DESTROY_DEV], arg ptr[in, VDUSE_DESTROY_DEV])
ioctl$auto_VDUSE_DEV_GET_FEATURES(fd fd, cmd const[VDUSE_DEV_GET_FEATURES], arg ptr[in, VDUSE_DEV_GET_FEATURES])
ioctl$auto_VDUSE_DEV_INJECT_CONFIG_IRQ(fd fd, cmd const[VDUSE_DEV_INJECT_CONFIG_IRQ], arg ptr[in, VDUSE_DEV_INJECT_CONFIG_IRQ])
ioctl$auto_VDUSE_DEV_SET_CONFIG(fd fd, cmd const[VDUSE_DEV_SET_CONFIG], arg ptr[in, VDUSE_DEV_SET_CONFIG])
ioctl$auto_VDUSE_GET_API_VERSION(fd fd, cmd const[VDUSE_GET_API_VERSION], arg ptr[in, VDUSE_GET_API_VERSION])
ioctl$auto_VDUSE_IOTLB_DEREG_UMEM(fd fd, cmd const[VDUSE_IOTLB_DEREG_UMEM], arg ptr[in, VDUSE_IOTLB_DEREG_UMEM])
ioctl$auto_VDUSE_IOTLB_GET_FD(fd fd, cmd const[VDUSE_IOTLB_GET_FD], arg ptr[in, VDUSE_IOTLB_GET_FD])
ioctl$auto_VDUSE_IOTLB_GET_INFO(fd fd, cmd const[VDUSE_IOTLB_GET_INFO], arg ptr[in, VDUSE_IOTLB_GET_INFO])
ioctl$auto_VDUSE_IOTLB_REG_UMEM(fd fd, cmd const[VDUSE_IOTLB_REG_UMEM], arg ptr[in, VDUSE_IOTLB_REG_UMEM])
ioctl$auto_VDUSE_SET_API_VERSION(fd fd, cmd const[VDUSE_SET_API_VERSION], arg ptr[in, VDUSE_SET_API_VERSION])
ioctl$auto_VDUSE_VQ_GET_INFO(fd fd, cmd const[VDUSE_VQ_GET_INFO], arg ptr[in, VDUSE_VQ_GET_INFO])
ioctl$auto_VDUSE_VQ_INJECT_IRQ(fd fd, cmd const[VDUSE_VQ_INJECT_IRQ], arg ptr[in, VDUSE_VQ_INJECT_IRQ])
ioctl$auto_VDUSE_VQ_SETUP(fd fd, cmd const[VDUSE_VQ_SETUP], arg ptr[in, VDUSE_VQ_SETUP])
ioctl$auto_VDUSE_VQ_SETUP_KICKFD(fd fd, cmd const[VDUSE_VQ_SETUP_KICKFD], arg ptr[in, VDUSE_VQ_SETUP_KICKFD])
ioctl$auto_VFAT_IOCTL_READDIR_BOTH32(fd fd, cmd const[VFAT_IOCTL_READDIR_BOTH32], arg ptr[in, VFAT_IOCTL_READDIR_BOTH32])
ioctl$auto_VFAT_IOCTL_READDIR_BOTH(fd fd, cmd const[VFAT_IOCTL_READDIR_BOTH], arg ptr[in, VFAT_IOCTL_READDIR_BOTH])
ioctl$auto_VFAT_IOCTL_READDIR_SHORT32(fd fd, cmd const[VFAT_IOCTL_READDIR_SHORT32], arg ptr[in, VFAT_IOCTL_READDIR_SHORT32])
ioctl$auto_VFAT_IOCTL_READDIR_SHORT(fd fd, cmd const[VFAT_IOCTL_READDIR_SHORT], arg ptr[in, VFAT_IOCTL_READDIR_SHORT])
ioctl$auto_VFIO_DEVICE_ATTACH_IOMMUFD_PT(fd fd, cmd const[VFIO_DEVICE_ATTACH_IOMMUFD_PT], arg ptr[in, VFIO_DEVICE_ATTACH_IOMMUFD_PT])
ioctl$auto_VFIO_DEVICE_DETACH_IOMMUFD_PT(fd fd, cmd const[VFIO_DEVICE_DETACH_IOMMUFD_PT], arg ptr[in, VFIO_DEVICE_DETACH_IOMMUFD_PT])
ioctl$auto_VFIO_DEVICE_FEATURE(fd fd, cmd const[VFIO_DEVICE_FEATURE], arg ptr[in, VFIO_DEVICE_FEATURE])
ioctl$auto_VHOST_GET_BACKEND_FEATURES(fd fd, cmd const[VHOST_GET_BACKEND_FEATURES], arg ptr[in, VHOST_GET_BACKEND_FEATURES])
ioctl$auto_VHOST_GET_FEATURES(fd fd, cmd const[VHOST_GET_FEATURES], arg ptr[in, VHOST_GET_FEATURES])
ioctl$auto_VHOST_NET_SET_BACKEND(fd fd, cmd const[VHOST_NET_SET_BACKEND], arg ptr[in, VHOST_NET_SET_BACKEND])
ioctl$auto_VHOST_RESET_OWNER(fd fd, cmd const[VHOST_RESET_OWNER], arg ptr[in, VHOST_RESET_OWNER])
ioctl$auto_VHOST_SET_BACKEND_FEATURES(fd fd, cmd const[VHOST_SET_BACKEND_FEATURES], arg ptr[in, VHOST_SET_BACKEND_FEATURES])
ioctl$auto_VHOST_SET_FEATURES(fd fd, cmd const[VHOST_SET_FEATURES], arg ptr[in, VHOST_SET_FEATURES])
ioctl$auto_VHOST_SET_LOG_BASE(fd fd, cmd const[VHOST_SET_LOG_BASE], arg ptr[in, VHOST_SET_LOG_BASE])
ioctl$auto_VHOST_SET_LOG_FD(fd fd, cmd const[VHOST_SET_LOG_FD], arg ptr[in, VHOST_SET_LOG_FD])
ioctl$auto_VHOST_SET_OWNER(fd fd, cmd const[VHOST_SET_OWNER], arg ptr[in, VHOST_SET_OWNER])
ioctl$auto_VHOST_VDPA_GET_AS_NUM(fd fd, cmd const[VHOST_VDPA_GET_AS_NUM], arg ptr[in, VHOST_VDPA_GET_AS_NUM])
ioctl$auto_VHOST_VDPA_GET_CONFIG(fd fd, cmd const[VHOST_VDPA_GET_CONFIG], arg ptr[in, VHOST_VDPA_GET_CONFIG])
ioctl$auto_VHOST_VDPA_GET_CONFIG_SIZE(fd fd, cmd const[VHOST_VDPA_GET_CONFIG_SIZE], arg ptr[in, VHOST_VDPA_GET_CONFIG_SIZE])
ioctl$auto_VHOST_VDPA_GET_DEVICE_ID(fd fd, cmd const[VHOST_VDPA_GET_DEVICE_ID], arg ptr[in, VHOST_VDPA_GET_DEVICE_ID])
ioctl$auto_VHOST_VDPA_GET_GROUP_NUM(fd fd, cmd const[VHOST_VDPA_GET_GROUP_NUM], arg ptr[in, VHOST_VDPA_GET_GROUP_NUM])
ioctl$auto_VHOST_VDPA_GET_IOVA_RANGE(fd fd, cmd const[VHOST_VDPA_GET_IOVA_RANGE], arg ptr[in, VHOST_VDPA_GET_IOVA_RANGE])
ioctl$auto_VHOST_VDPA_GET_STATUS(fd fd, cmd const[VHOST_VDPA_GET_STATUS], arg ptr[in, VHOST_VDPA_GET_STATUS])
ioctl$auto_VHOST_VDPA_GET_VQS_COUNT(fd fd, cmd const[VHOST_VDPA_GET_VQS_COUNT], arg ptr[in, VHOST_VDPA_GET_VQS_COUNT])
ioctl$auto_VHOST_VDPA_GET_VRING_NUM(fd fd, cmd const[VHOST_VDPA_GET_VRING_NUM], arg ptr[in, VHOST_VDPA_GET_VRING_NUM])
ioctl$auto_VHOST_VDPA_RESUME(fd fd, cmd const[VHOST_VDPA_RESUME], arg ptr[in, VHOST_VDPA_RESUME])
ioctl$auto_VHOST_VDPA_SET_CONFIG_CALL(fd fd, cmd const[VHOST_VDPA_SET_CONFIG_CALL], arg ptr[in, VHOST_VDPA_SET_CONFIG_CALL])
ioctl$auto_VHOST_VDPA_SET_CONFIG(fd fd, cmd const[VHOST_VDPA_SET_CONFIG], arg ptr[in, VHOST_VDPA_SET_CONFIG])
ioctl$auto_VHOST_VDPA_SET_STATUS(fd fd, cmd const[VHOST_VDPA_SET_STATUS], arg ptr[in, VHOST_VDPA_SET_STATUS])
ioctl$auto_VHOST_VDPA_SUSPEND(fd fd, cmd const[VHOST_VDPA_SUSPEND], arg ptr[in, VHOST_VDPA_SUSPEND])
ioctl$auto_VHOST_VSOCK_SET_GUEST_CID(fd fd, cmd const[VHOST_VSOCK_SET_GUEST_CID], arg ptr[in, VHOST_VSOCK_SET_GUEST_CID])
ioctl$auto_VHOST_VSOCK_SET_RUNNING(fd fd, cmd const[VHOST_VSOCK_SET_RUNNING], arg ptr[in, VHOST_VSOCK_SET_RUNNING])
ioctl$auto_VM_READ(fd fd, cmd const[VM_READ], arg ptr[in, VM_READ])
ioctl$auto_VM_READ | VM_WRITE(fd fd, cmd const[VM_READ | VM_WRITE], arg ptr[in, VM_READ | VM_WRITE])
ioctl$auto_VM_WRITE(fd fd, cmd const[VM_WRITE], arg ptr[in, VM_WRITE])
ioctl$auto_VT_DEALLOCATE(fd fd, cmd const[VT_DEALLOCATE], arg ptr[in, VT_DEALLOCATE])
ioctl$auto_VT_UPDATE(fd fd, cmd const[VT_UPDATE], arg ptr[in, VT_UPDATE])
ioctl$auto_WDIOC_GETBOOTSTATUS(fd fd, cmd const[WDIOC_GETBOOTSTATUS], arg ptr[in, WDIOC_GETBOOTSTATUS])
ioctl$auto_WDIOC_GETSTATUS(fd fd, cmd const[WDIOC_GETSTATUS], arg ptr[in, WDIOC_GETSTATUS])
ioctl$auto_WDIOC_GETSUPPORT(fd fd, cmd const[WDIOC_GETSUPPORT], arg ptr[in, WDIOC_GETSUPPORT])
ioctl$auto_WDIOC_GETTEMP(fd fd, cmd const[WDIOC_GETTEMP], arg ptr[in, WDIOC_GETTEMP])
ioctl$auto_WDIOC_GETTIMELEFT(fd fd, cmd const[WDIOC_GETTIMELEFT], arg ptr[in, WDIOC_GETTIMELEFT])
ioctl$auto_WDIOC_GETTIMEOUT(fd fd, cmd const[WDIOC_GETTIMEOUT], arg ptr[in, WDIOC_GETTIMEOUT])
ioctl$auto_WDIOC_KEEPALIVE(fd fd, cmd const[WDIOC_KEEPALIVE], arg ptr[in, WDIOC_KEEPALIVE])
ioctl$auto_WDIOC_SETOPTIONS(fd fd, cmd const[WDIOC_SETOPTIONS], arg ptr[in, WDIOC_SETOPTIONS])
ioctl$auto_WDIOC_SETTIMEOUT(fd fd, cmd const[WDIOC_SETTIMEOUT], arg ptr[in, WDIOC_SETTIMEOUT])
ioctl$auto_WLAN_CIPHER_SUITE_AES_CMAC(fd fd, cmd const[WLAN_CIPHER_SUITE_AES_CMAC], arg ptr[in, WLAN_CIPHER_SUITE_AES_CMAC])
ioctl$auto_WLAN_CIPHER_SUITE_BIP_CMAC_256(fd fd, cmd const[WLAN_CIPHER_SUITE_BIP_CMAC_256], arg ptr[in, WLAN_CIPHER_SUITE_BIP_CMAC_256])
ioctl$auto_WLAN_CIPHER_SUITE_BIP_GMAC_128(fd fd, cmd const[WLAN_CIPHER_SUITE_BIP_GMAC_128], arg ptr[in, WLAN_CIPHER_SUITE_BIP_GMAC_128])
ioctl$auto_WLAN_CIPHER_SUITE_BIP_GMAC_256(fd fd, cmd const[WLAN_CIPHER_SUITE_BIP_GMAC_256], arg ptr[in, WLAN_CIPHER_SUITE_BIP_GMAC_256])
ioctl$auto_WLAN_CIPHER_SUITE_CCMP_256(fd fd, cmd const[WLAN_CIPHER_SUITE_CCMP_256], arg ptr[in, WLAN_CIPHER_SUITE_CCMP_256])
ioctl$auto_WLAN_CIPHER_SUITE_CCMP(fd fd, cmd const[WLAN_CIPHER_SUITE_CCMP], arg ptr[in, WLAN_CIPHER_SUITE_CCMP])
ioctl$auto_WLAN_CIPHER_SUITE_GCMP_256(fd fd, cmd const[WLAN_CIPHER_SUITE_GCMP_256], arg ptr[in, WLAN_CIPHER_SUITE_GCMP_256])
ioctl$auto_WLAN_CIPHER_SUITE_GCMP(fd fd, cmd const[WLAN_CIPHER_SUITE_GCMP], arg ptr[in, WLAN_CIPHER_SUITE_GCMP])
ioctl$auto_WLAN_CIPHER_SUITE_TKIP(fd fd, cmd const[WLAN_CIPHER_SUITE_TKIP], arg ptr[in, WLAN_CIPHER_SUITE_TKIP])
ioctl$auto_WLAN_CIPHER_SUITE_WEP104(fd fd, cmd const[WLAN_CIPHER_SUITE_WEP104], arg ptr[in, WLAN_CIPHER_SUITE_WEP104])
ioctl$auto_WLAN_CIPHER_SUITE_WEP40(fd fd, cmd const[WLAN_CIPHER_SUITE_WEP40], arg ptr[in, WLAN_CIPHER_SUITE_WEP40])
ioctl$auto_X86_IOC_RDMSR_REGS(fd fd, cmd const[X86_IOC_RDMSR_REGS], arg ptr[in, X86_IOC_RDMSR_REGS])
ioctl$auto_X86_IOC_WRMSR_REGS(fd fd, cmd const[X86_IOC_WRMSR_REGS], arg ptr[in, X86_IOC_WRMSR_REGS])
